<ls:UIWidget x:Name="CharacterCreation_c"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterCreation"
    ls:TooltipExtender.Owner="{Binding DummyCharacter}"
    d:DataContext="{d:DesignInstance {x:Type ls:DCCharacterCreation}, IsDesignTimeCreatable=True}"
    FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">

    <ls:UIWidget.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CCLib_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Message box to ensure user wants to activate tutorials -->
            <ls:LSMessageBoxData x:Key="MessageBoxTutorialsCheck"
                                 Text="{Binding Source='h86f06e64g4588g4798gb828gf6e0268122af', Converter={StaticResource TranslatedStringConverter}}"
                                 Title="{Binding Source='h402bb6d3gff93g4f4fga983g36460a611cab', Converter={StaticResource TranslatedStringConverter}}"
                                 UUID="UUIDTutorialsCheck" CheckBox="True" CheckBoxValue="True">
                <ls:LSMessageBoxData.Actions>
                    <ls:LSGameCommandData ActionName="{Binding Source='h31d65d36gfe5fg4f9bg9184g9f8ceee5f3ed', Converter={StaticResource TranslatedStringConverter}}"
                                          Command="{Binding DataContext.CheckShowTutorialsQuestion, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                          BoundInput="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"/>
                </ls:LSMessageBoxData.Actions>
            </ls:LSMessageBoxData>

            <ControlTemplate x:Key="originControlsTemplate">
                <StackPanel>

                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h19e906f0g930ag4c5agaad9gd0413fc716c0, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

                    <ListBox x:Name="originCarousel" Template="{StaticResource IconCarouselTemplate}" ItemsSource="{Binding FilteredItems, ElementName=SelectablePresetOriginsCollection}" SelectedItem="{Binding SelectedOrigin}" Margin="0,50,0,0">

                        <ListBox.Resources>
                            <ControlTemplate x:Key="IconsTemplate">
                                <Grid>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                                        <Rectangle Fill="{Binding SelectedItem.Prev.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                    <GradientStop Offset="0" Color="Transparent" />
                                                    <GradientStop Offset="1" Color="White" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>

                                        <Grid Margin="20,0,20,0">
                                            <Rectangle Fill="{Binding SelectedItem.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196"/>
                                            <Image Visibility="{Binding SelectedItem.Prev.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource BoolToCollapsedConverter}}" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
                                        </Grid>

                                        <Grid Margin="50,0,50,0">
                                            <Rectangle x:Name="selected" Fill="{Binding SelectedItem.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="202" Height="300"/>
                                            <Image x:Name="lock" Visibility="Collapsed" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
                                            <Ellipse x:Name="otherPlayer" Height="50" Width="50" Fill="{Binding SelectedItem.OtherPlayerChoice.CommunityIcon, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,20"/>
                                        </Grid>

                                        <Grid Margin="20,0,20,0">
                                            <Rectangle Fill="{Binding SelectedItem.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196"/>
                                            <Image Visibility="{Binding SelectedItem.Next.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource BoolToCollapsedConverter}}" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
                                        </Grid>

                                        <Rectangle Fill="{Binding SelectedItem.Next.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                    <GradientStop Offset="0" Color="White" />
                                                    <GradientStop Offset="1" Color="Transparent" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>

                                    </StackPanel>
                                    <TextBlock x:Name="disableReason" Visibility="Collapsed" ls:TextBlockFormatter.SourceText="{Binding Path=SelectedItem.DisableReason, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" FontSize="{StaticResource ScaledDefaultFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Value="False">
                                        <Setter TargetName="lock" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="disableReason" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ListBox.Resources>
                    </ListBox>
                   
                </StackPanel>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1"/>
                            <Condition Binding="{Binding ElementName=originCarousel, Path=SelectedItem}" Value="{x:Null}"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="originCarousel" Property="SelectedIndex" Value="0"/>
                    </MultiDataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ChangeRandomCharacterCarouselTemplate">
                <StackPanel>
                    <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True">
                        <Grid>
                            <ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" IsEnabled="{Binding HasPreviousCharacter}" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" Command="{Binding DataContext.RandomCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="prev">
                                <ls:LSButton.RenderTransform>
                                    <ScaleTransform ScaleX="-1" CenterX="32"/>
                                </ls:LSButton.RenderTransform>
                            </ls:LSButton>
                            <ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" IsEnabled="{Binding HasNextCharacter}" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.RandomCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="next"/>

                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1595c068g30a1g4efegbd7fg072665991b3b', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource IconCarouselText}"/>
                        </Grid>
                    </ContentControl>

                    <ls:LSButton x:Name="RandomiseCharacterButton" 
                                 Command="{Binding DataContext.RandomCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                 CommandParameter="new"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
                                 Tag="{Binding Source=h726d54dcg32b8g4d47g95cega8ff28505e85, Converter={StaticResource TranslatedStringConverter}}"
                                 BoundEvent="UIAccept"
                                 Margin="0,32,0,0"
                                 Visibility="{Binding ElementName=base, Path=(ls:MoveFocus.IsFocused), Converter={StaticResource BoolToVisibleConverter}}"/>
                </StackPanel>
            </ControlTemplate>

            <ControlTemplate x:Key="setAppearanceCamera">
                <Canvas>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="CloseupB"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>1.3</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>1.3</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>2.7</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="setAppearanceCamera_Splitscreen">
                <Canvas>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="CloseupB"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>1.3</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>1.3</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>1.3</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="setDaisyCamera">
                <Canvas>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">

                            <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>-6</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>-4</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>0.5</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="setDaisyCamera_Splitscreen">
                <Canvas>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">

                            <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>-0.5</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>-1.5</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>0.5</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceCarousel" TargetType="ListBox">
                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                    <Grid>

                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" Command="{Binding DataContext.PrevItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                            <ls:LSRepeatButton.RenderTransform>
                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                            </ls:LSRepeatButton.RenderTransform>
                        </ls:LSRepeatButton>

                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.NextItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}"/>

                        <StackPanel VerticalAlignment="Center">

                            <TextBlock x:Name="title" Text="{TemplateBinding Tag}" Style="{StaticResource AppearanceCarouselTitleText}" />

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock x:Name="cTxt" Style="{StaticResource AppearanceCarouselValueText}">
                                    <Run Text="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource AddConverter}, ConverterParameter='1'}"/><Run Text="{Binding ItemsSource.Count, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat=/{0}}"/>
                                </TextBlock>

                                <TextBlock x:Name="selectionName" Text="{Binding SelectedItem.Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat=' ~ {0}'}" Style="{StaticResource AppearanceCarouselValueText}"/>

                                <Ellipse x:Name="colourSwatch" Visibility="Collapsed" Fill="{Binding SelectedItem.Colour, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="60" Height="60" Margin="20,0,0,0"/>

                                <StackPanel x:Name="materialColor" Visibility="Collapsed" Orientation="Horizontal">

                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedItem.ColorName, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource TranslatedStringConverter}, ConverterParameter='LocaKey', StringFormat=' ~ {0}'}" Style="{StaticResource AppearanceCarouselValueText}"/>
                                    <Ellipse Fill="{Binding SelectedItem.Color, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="60" Height="60" Margin="20,0,0,0"/>

                                </StackPanel>

                            </StackPanel>
                        </StackPanel>

                    </Grid>
                </ContentControl>
                <ControlTemplate.Triggers>
                    <Trigger Property="Tag" Value="daisyrace">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hadf27237ge191g4922ga84cg055b984c9b1f', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="daisysubrace">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h08c34beeg3883g49b0gb9ffg79cad05797e9', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="heads">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h3eee9b8dgc315g4cb8g90a3g50cea8a27c69', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="topofhead">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h971421cfgc048g476fgbbe1g91a91e796a78', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="chin">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h0346a0efg6393g4ce1gbc5cgbcc420046d79', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="jaw">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hcea5dbbdg1d7dg4c82g8c93g2546cb585e7f', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="tail">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hbb75a111g99e6g45afga2a6gaf73b748faa8', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="skinColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hc81ba7bcgb2ccg4423ga050g253fd53ce2c9', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="eyeColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="eyeColors"/>
                            <Condition Binding="{Binding HeterochromiaEnabled}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="title" Property="Text" Value="{Binding Source='hc6bfd120gde63g4c3ag99eag43e8f905a7d4', Converter={StaticResource TranslatedStringConverter}}"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <Trigger Property="Tag" Value="heterochromiaEyeColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h7d84f886g75e1g46begb5adg922b4238c617', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="tattoos">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h3f96b6b8gd682g4b90ga8fdge34ccb965bbd', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="tattooColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h0c6d2890g6a16g4e20ga2a1gcb15afa6e8d3', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="makeup">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hbd793d8fg4b19g4efdga071g112ba7af47dd', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="makeupColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hd98545bbg8f42g437dg8f70gcb5f7a1bda8b', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="lipMakeupColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='ha96c9b3bg5d8dg4ebbgb7a8gbefe66c7b781', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger  Property="Tag" Value="scars">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h408d8f2bgca7eg4d20gb0bag4d4a3318f1c5', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="hair">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='haaecd709ga04eg4c33gb2a3gd5be989e5146', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="hairColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="hairHighlights">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h9d4a4e08g81cdg4259g8bd1g80b47dbda3f3', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="hairGrays">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="beards">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h5060d1edg2799g4388g9203gc42e380c68f8', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="horns">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h290f2542g9702g4651g8afdgdae1f08a12eb', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="hornColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h8f9581e8g4440g4cf5g8752g220535346a50', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="hornTipColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h33ea2bd3g91cag471cg8242gef7327983dbf', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="scales">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h381a6c0bg214fg4968gae5cg9e5b8a8ffc20', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="scaleColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h85555614g40b2g459dgbfbfg76291036aebe', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="draconicLines">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h861a433dgcc20g452bg9b1agde89d14c85c9', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="draconicLineColors">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h7202f8ebgaa5dg411dgac62g3bf8986e28b3', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="colourSwatch" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="base" Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Trigger>
                    
                    

                    <!-- No Tag set on base means no sub panel that can be opened -->
                    <Trigger Property="Tag" Value="piercing">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h5458d095gcdb9g414bgacfdgdbd144fc2bd0', Converter={StaticResource TranslatedStringConverter}}"/>
                    </Trigger>

                    <Trigger Property="Tag" Value="genitals">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h72410e08g770dg48c8g98e8g5a5a933a2254', Converter={StaticResource TranslatedStringConverter}}"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceSliderCarousel" TargetType="ListBox">
                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                    <Grid>
                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" Command="{Binding DataContext.PrevSliderCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                            <ls:LSRepeatButton.RenderTransform>
                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                            </ls:LSRepeatButton.RenderTransform>
                        </ls:LSRepeatButton>
                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.NextSliderCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                        <ls:LSRepeatButton x:Name="leftBtnBigger" BoundEvent="PartyManagement" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.BiggerPrevSliderCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                        <ls:LSRepeatButton x:Name="rightBtnBigger" BoundEvent="PanelSelect" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.BiggerNextSliderCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>

                        <StackPanel VerticalAlignment="Center">

                            <TextBlock x:Name="title" Text="{Binding Source='hfcbe9131g86b0g46d7ga4afg5c3301c070bf', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}" />

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock x:Name="cTxt" Style="{StaticResource AppearanceCarouselValueText}">
                                    <Run Text="{Binding DataContext.Value, Converter={StaticResource RoundConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat={}{0}%}"/>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>

                    </Grid>
                </ContentControl>
                <ControlTemplate.Triggers>
                    <Trigger Property="ls:AttachedProperties.InheritedTag" Value="freckles">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h6a8fb398g7b1ag443egb45eg53c46ebbe9a3', Converter={StaticResource TranslatedStringConverter}}"/>
                    </Trigger>
                    <Trigger Property="ls:AttachedProperties.InheritedTag" Value="frecklesIntensity">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h63c9cb05g65f3g439dgb85bg9eb69a2cc894', Converter={StaticResource TranslatedStringConverter}}"/>
                    </Trigger>
                    <Trigger Property="ls:AttachedProperties.InheritedTag" Value="vitiligo">
                        <Setter TargetName="title" Property="Text" Value="{Binding Source='h8f8d1cc6g57adg486agbb58gcba376102c37', Converter={StaticResource TranslatedStringConverter}}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>


            <ControlTemplate x:Key="appearanceListTemplate">
                <StackPanel x:Name="appearanceListPanel">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                        </b:EventTrigger>
                        <b:EventTrigger EventName="Unloaded">
                            <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{StaticResource TrueValue}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <ls:LSButton x:Name="newRandomAppearance" Visibility="Collapsed" ls:MoveFocus.Focusable="True" Focusable="True" Command="{Binding RandomCharacter}" CommandParameter="new">
                        <ls:LSButton.Template>
                            <ControlTemplate>
                                <Grid x:Name="bg" Width="{StaticResource appearancePanelWidth}" Height="90">

                                    <Image x:Name="box" Source="{StaticResource ListButtonBg}" Stretch="Fill"/>

                                    <TextBlock x:Name="text" ls:TextBlockFormatter.SourceText="{Binding Source='h6b184ec1gc364g4467g9617g3ab1a3959d10', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}" VerticalAlignment="Center"/>

                                    <Control x:Name="img" Visibility="{Binding (ls:MoveFocus.IsFocused), RelativeSource={RelativeSource AncestorType={x:Type ls:LSButton}}, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter=True}" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" Template="{StaticResource ControllerButton.ImageSwitcher}" Width="{DynamicResource ScaledControllerHintSize}" Height="{DynamicResource ScaledControllerHintSize}" HorizontalAlignment="Right" VerticalAlignment="Center"/>

                                    <Control x:Name="frame" Width="800" Height="126" HorizontalAlignment="Center" VerticalAlignment="Center" />

                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                                        <Setter TargetName="box" Property="Source" Value="{StaticResource ListButtonBg_h}"/>
                                        <Setter TargetName="frame" Property="Template" Value="{StaticResource FocusedListItemIndicatorTemplate}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                        <Setter TargetName="img" Property="Margin" Value="0,4,0,-4"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ls:LSButton.Template>
                    </ls:LSButton>

                    <ListBox x:Name="randomAppearancesCarousel" Visibility="Collapsed" Margin="0,0,0,20">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                    <Grid>

                                        <ls:LSRepeatButton x:Name="leftBtn" Command="{Binding RandomCharacter}" CommandParameter="prev" BoundEvent="UILeft" IsEnabled="{Binding HasPreviousCharacter}" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <ls:LSRepeatButton.RenderTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                                            </ls:LSRepeatButton.RenderTransform>
                                        </ls:LSRepeatButton>
                                        <ls:LSRepeatButton x:Name="rightBtn" Command="{Binding RandomCharacter}" CommandParameter="next" BoundEvent="UIRight" IsEnabled="{Binding HasNextCharacter}" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}"/>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Source='h8b63fa05g09d3g445fgb24agcd8718089484', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}"/>
                                            <TextBlock x:Name="cTxt" Style="{StaticResource AppearanceCarouselValueText}">
                                                <Run Text="{Binding RandomAppearanceIndex, Converter={StaticResource AddConverter}, ConverterParameter='1'}"/><Run Text="{Binding RandomAppearanceCount, StringFormat=/{0}}"/>
                                            </TextBlock>
                                        </StackPanel>

                                    </Grid>
                                </ContentControl>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="appearance">
                                        <Setter TargetName="leftBtn" Property="Command" Value="{Binding RandomAppearance}"/>
                                        <Setter TargetName="rightBtn" Property="Command" Value="{Binding RandomAppearance}"/>
                                        <Setter TargetName="leftBtn" Property="IsEnabled" Value="{Binding HasPreviousAppearance}"/>
                                        <Setter TargetName="rightBtn" Property="IsEnabled" Value="{Binding HasNextAppearance}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>

                    <ListBox x:Name="daisyRace" Tag="daisyrace" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}" Template="{StaticResource AppearanceCarousel}"/>

                    <ListBox x:Name="daisySubRace" Tag="daisysubrace" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding Path=SelectableSubRaces.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <StackPanel x:Name="bodyType">
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding BodyTypeAndShape}" Value="Female">
                                <b:ChangePropertyAction TargetName="bodyTypeCarousel" PropertyName="SelectedIndex" Value="0"/>
                            </b:DataTrigger>
                            <b:DataTrigger Binding="{Binding BodyTypeAndShape}" Value="Male">
                                <b:ChangePropertyAction TargetName="bodyTypeCarousel" PropertyName="SelectedIndex" Value="1"/>
                            </b:DataTrigger>
                            <b:DataTrigger Binding="{Binding BodyTypeAndShape}" Value="FemaleStrong">
                                <b:ChangePropertyAction TargetName="bodyTypeCarousel" PropertyName="SelectedIndex" Value="2"/>
                            </b:DataTrigger>
                            <b:DataTrigger Binding="{Binding BodyTypeAndShape}" Value="MaleStrong">
                                <b:ChangePropertyAction TargetName="bodyTypeCarousel" PropertyName="SelectedIndex" Value="3"/>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>

                        <ListBox x:Name="bodyTypeCarousel" Visibility="{Binding SelectedOrigin.IsLockedBody, Converter={StaticResource BoolToCollapsedConverter}}">
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                        <Grid>
                                            <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0"
                                        Command="{Binding DataContext.SelectPreviousBodyType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                                <ls:LSRepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                </ls:LSRepeatButton.RenderTransform>
                                            </ls:LSRepeatButton>
                                            <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0"
                                        Command="{Binding DataContext.SelectNextBodyType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}"/>

                                            <StackPanel VerticalAlignment="Center">
                                                <TextBlock Text="{Binding Source='hc4f5c05bgc2feg4333ga08fg229b33c42437', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}"/>

                                                <TextBlock x:Name="cTxt" Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat={}{0}/4}" Style="{StaticResource AppearanceCarouselValueText}"/>
                                            </StackPanel>

                                        </Grid>
                                    </ContentControl>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.SelectedRace.HasAdditionalBodyShapes, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False">
                                            <Setter TargetName="cTxt" Property="Text" Value="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat={}{0}/2}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBoxItem x:Name="female" Content="1"/>
                            <ListBoxItem x:Name="male" Content="2"/>
                            <ListBoxItem x:Name="femaleStrong" Content="3"/>
                            <ListBoxItem x:Name="maleStrong" Content="4"/>
                        </ListBox>
                    </StackPanel>

                    <StackPanel Visibility="{Binding CanEditIdentity, Converter={StaticResource BoolToVisibleConverter}}">
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding SelectedIdentity}" Value="Male">
                                <b:ChangePropertyAction TargetName="identityCarousel" PropertyName="SelectedIndex" Value="0"/>
                            </b:DataTrigger>
                            <b:DataTrigger Binding="{Binding SelectedIdentity}" Value="Female">
                                <b:ChangePropertyAction TargetName="identityCarousel" PropertyName="SelectedIndex" Value="1"/>
                            </b:DataTrigger>
                            <b:DataTrigger Binding="{Binding SelectedIdentity}" Value="Neutral">
                                <b:ChangePropertyAction TargetName="identityCarousel" PropertyName="SelectedIndex" Value="2"/>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>

                        <ListBox x:Name="identityCarousel">
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                        <Grid>
                                            <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" Command="{Binding DataContext.SelectPreviousIdentity, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_Gender">
                                                <ls:LSRepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                </ls:LSRepeatButton.RenderTransform>
                                            </ls:LSRepeatButton>
                                            <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.SelectNextIdentity, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_Gender"/>

                                            <StackPanel VerticalAlignment="Center">

                                                <TextBlock Text="{Binding Source='hcc23cfaagbc1eg4bb0gafb9g9f720497b786', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}" />

                                                <TextBlock x:Name="cTxt" Style="{StaticResource AppearanceCarouselValueText}">
                                                                            <Run Text="{Binding SelectedIndex, ElementName=identityCarousel, Converter={StaticResource AddConverter}, ConverterParameter='1', StringFormat={}{0}/3}"/>
                                                                            <Run Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, StringFormat=~{0}}"/>
                                                </TextBlock>

                                            </StackPanel>

                                        </Grid>
                                    </ContentControl>
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBoxItem x:Name="m" Content="{Binding Source='hf12d3837gd6fbg448ag813dg9cf6d9a4d412', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ListBoxItem x:Name="f" Content="{Binding Source='h5d60ad1cg41dcg4d9fgaba8gda842c090327', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ListBoxItem x:Name="n" Content="{Binding Source='hea2ce077g2b7ag42dfgb194g928c3dd108a7', Converter={StaticResource TranslatedStringConverter}}"/>
                        </ListBox>

                    </StackPanel>

                    <!-- ToDo: polish, press to hear voice -->
                    <ListBox x:Name="voices" ItemsSource="{Binding Voices.ComboItems}" SelectedItem="{Binding Voices.SelectedItem}">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                    <Grid>
                                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" Command="{Binding DataContext.PrevComboItemCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Voices}">
                                            <ls:LSRepeatButton.RenderTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                                            </ls:LSRepeatButton.RenderTransform>
                                        </ls:LSRepeatButton>
                                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" Command="{Binding DataContext.NextComboItemCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                        CommandParameter="{Binding Voices}"/>

                                        <StackPanel VerticalAlignment="Center">

                                            <TextBlock Text="{Binding Source='h81102ec7gef4dg42edg85b5g60d7fb1d13f9', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}" />

                                            <TextBlock x:Name="cTxt" Style="{StaticResource AppearanceCarouselValueText}">
                                                                        <Run Text="{Binding SelectedIndex, ElementName=voices, Converter={StaticResource AddConverter}, ConverterParameter='1'}"/><Run Text="{Binding Voices.ComboItems.Count, StringFormat=/{0}}"/><Run Text="{Binding Voices.SelectedItem.Name, StringFormat=' ~ {0}'}"/>
                                            </TextBlock>

                                        </StackPanel>

                                    </Grid>
                                </ContentControl>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>

                    <ListBox Tag="heads" ItemsSource="{Binding SelectableHeads}" SelectedItem="{Binding SelectedHead}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableHeads.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox Tag="topofhead" ItemsSource="{Binding SelectableTopOfHead}" SelectedItem="{Binding SelectedTopOfHead}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableTopOfHead.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                    <ListBox Tag="chin" ItemsSource="{Binding SelectableChin}" SelectedItem="{Binding SelectedChin}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableChin.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                    <ListBox Tag="jaw" ItemsSource="{Binding SelectableJaw}" SelectedItem="{Binding SelectedJaw}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableJaw.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                    <ListBox Tag="tail" ItemsSource="{Binding SelectableTail}" SelectedItem="{Binding SelectedTail}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableTail.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox Tag="skinColors" ItemsSource="{Binding SelectableSkinColours}" SelectedItem="{Binding SelectedSkinColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableSkinColours.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox x:Name="age" Tag="{StaticResource FalseValue}" ls:AttachedProperties.InheritedTag="age" DataContext="{Binding ApperanceScalarAge}" Template="{StaticResource AppearanceSliderCarousel}" Visibility="Collapsed"/>

                    <ListBox x:Name="freckles" Tag="{StaticResource FalseValue}" ls:AttachedProperties.InheritedTag="freckles" DataContext="{Binding ApperanceScalarFreckles}" Template="{StaticResource AppearanceSliderCarousel}" Visibility="Collapsed"/>

                    <ListBox x:Name="frecklesIntensity" Tag="{StaticResource FalseValue}" ls:AttachedProperties.InheritedTag="frecklesIntensity" DataContext="{Binding ApperanceScalarFrecklesIntensity}" Template="{StaticResource AppearanceSliderCarousel}" Visibility="Collapsed"/>

                    <ListBox x:Name="vitiligo" Tag="{StaticResource FalseValue}" ls:AttachedProperties.InheritedTag="vitiligo" DataContext="{Binding ApperanceScalarVitiligo}" Template="{StaticResource AppearanceSliderCarousel}" Visibility="Collapsed"/>


                    <ListBox x:Name="enableHeterochromia" Visibility="{Binding SelectedOrigin.IsLockedAppearance, Converter={StaticResource BoolToCollapsedConverter}}">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                    <Grid x:Name="enableHeterochromiaToggle" Tag="{StaticResource FalseValue}">
                                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <ls:LSRepeatButton.RenderTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                                            </ls:LSRepeatButton.RenderTransform>
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetObject="{Binding .}" PropertyName="HeterochromiaEnabled" Value="{Binding HeterochromiaEnabled, Converter={StaticResource InvertBoolConverter}}"/>
                                                </b:EventTrigger>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding HeterochromiaEnabled}" Operator="Equal" RightOperand="{StaticResource FalseValue}"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <b:InvokeCommandAction Command="{Binding DisableHeterochromia}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>
                                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetObject="{Binding .}" PropertyName="HeterochromiaEnabled" Value="{Binding HeterochromiaEnabled, Converter={StaticResource InvertBoolConverter}}"/>
                                                </b:EventTrigger>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding HeterochromiaEnabled}" Operator="Equal" RightOperand="{StaticResource FalseValue}"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <b:InvokeCommandAction Command="{Binding DisableHeterochromia}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>

                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Source='h6f4a0631g9994g44ffg9468gaec6c6a62838', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}"/>

                                            <TextBlock x:Name="enableHeterochromiaValueText" Style="{StaticResource AppearanceCarouselValueText}"/>
                                        </StackPanel>

                                    </Grid>
                                </ContentControl>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding HeterochromiaEnabled}" Value="True">
                                        <Setter TargetName="enableHeterochromiaValueText" Property="Text" Value="{Binding Source='h054025c0gd806g418agb58dg6b325823b7cd', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HeterochromiaEnabled}" Value="False">
                                        <Setter TargetName="enableHeterochromiaValueText" Property="Text" Value="{Binding Source='h468f21a6g00c2g41c3g81d3gbe5291d6ab4d', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>

                    <ListBox Tag="eyeColors" ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedEyeColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableEyeColours.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox Tag="heterochromiaEyeColors" ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedHeterochromiaEyeColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding HeterochromiaEnabled, Converter={StaticResource BoolToVisibleConverter}}"/>

                    <StackPanel x:Name="tattooChoices" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                        <ListBox Tag="tattoos" ItemsSource="{Binding SelectableTattoos}" SelectedItem="{Binding SelectedTattoo}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableTattoos.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                        <ListBox Tag="tattooColors" ItemsSource="{Binding SelectableTattooColours}" SelectedItem="{Binding SelectedTattooColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding AppearanceTattoos.EmptyMaterialSelected, Converter={StaticResource BoolToCollapsedConverter}}"/>
                    </StackPanel>

                    <ListBox Tag="makeup" ItemsSource="{Binding SelectableMakeup}" SelectedItem="{Binding SelectedMakeup}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableMakeup.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox Tag="makeupColors" ItemsSource="{Binding SelectableMakeupColours}" SelectedItem="{Binding SelectedMakeupColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding AppearanceMakeup.EmptyMaterialSelected, Converter={StaticResource BoolToCollapsedConverter}}"/>
                    <ListBox Tag="lipMakeupColors" ItemsSource="{Binding SelectableLipsMakeupColours}" SelectedItem="{Binding SelectedLipsMakeupColour}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableLipsMakeupColours.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <StackPanel x:Name="scarChoices" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                        <ListBox Tag="scars" ItemsSource="{Binding SelectableScars}" SelectedItem="{Binding SelectedScar}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableScars.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                    </StackPanel>

                    <StackPanel x:Name="hairChoices" Visibility="{Binding SelectableHair.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ListBox Tag="hair" ItemsSource="{Binding SelectableHair}" SelectedItem="{Binding SelectedHair}" Template="{StaticResource AppearanceCarousel}"/>

                        <StackPanel x:Name="hairColoring" Visibility="Collapsed">
                            <ListBox Tag="hairColors" ItemsSource="{Binding SelectableHairColours}" SelectedItem="{Binding SelectedHairColour}" Template="{StaticResource AppearanceCarousel}"/>
                            <ListBox Tag="hairHighlights" ItemsSource="{Binding SelectableHighlightColours}" SelectedItem="{Binding SelectedHighlightColour}" Template="{StaticResource AppearanceCarousel}"/>
                            <ListBox Tag="hairGrays" ItemsSource="{Binding SelectableGrayingColours}" SelectedItem="{Binding SelectedGrayingColour}" Template="{StaticResource AppearanceCarousel}"/>
                        </StackPanel>
                    </StackPanel>

                    <ListBox Tag="beards" ItemsSource="{Binding SelectableBeards}" SelectedItem="{Binding SelectedBeard}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectableBeards.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                    <StackPanel x:Name="hornChoices" Visibility="{Binding SelectableHorns.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ListBox Tag="horns" ItemsSource="{Binding SelectableHorns}" SelectedItem="{Binding SelectedHorn}" Template="{StaticResource AppearanceCarousel}"/>
                        <ListBox Tag="hornColors" ItemsSource="{Binding SelectableHornColours}" SelectedItem="{Binding SelectedHornColour}" Template="{StaticResource AppearanceCarousel}"/>
                        <ListBox Tag="hornTipColors" ItemsSource="{Binding SelectableHornTipColours}" SelectedItem="{Binding SelectedHornTipColour}" Template="{StaticResource AppearanceCarousel}"/>
                    </StackPanel>

                    <ListBox x:Name="scales" Tag="scales" ItemsSource="{Binding SelectableScales}" SelectedItem="{Binding SelectedScales}" Template="{StaticResource AppearanceCarousel}" Visibility="Collapsed"/>
                    <ListBox x:Name="scaleColors" Tag="scaleColors" ItemsSource="{Binding SelectablePassiveColours}" SelectedItem="{Binding SelectedPassiveColour}" Template="{StaticResource AppearanceCarousel}" Visibility="Collapsed"/>

                    <ListBox x:Name="draconicLines" Visibility="Collapsed">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">
                                    <Grid x:Name="enableDraconicLinesToggle">
                                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <ls:LSRepeatButton.RenderTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                                            </ls:LSRepeatButton.RenderTransform>
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetObject="{Binding AppearancePassive}" PropertyName="EmptyMaterialSelected" Value="{Binding AppearancePassive.EmptyMaterialSelected, Converter={StaticResource InvertBoolConverter}}"/>
                                                    <b:InvokeCommandAction Command="{Binding DragonbornDraconicLinesToggleCommand}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>
                                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetObject="{Binding AppearancePassive}" PropertyName="EmptyMaterialSelected" Value="{Binding AppearancePassive.EmptyMaterialSelected, Converter={StaticResource InvertBoolConverter}}"/>
                                                    <b:InvokeCommandAction Command="{Binding DragonbornDraconicLinesToggleCommand}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>

                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Source='h861a433dgcc20g452bg9b1agde89d14c85c9', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}"/>

                                            <TextBlock x:Name="enableDraconicLinesValueText" Style="{StaticResource AppearanceCarouselValueText}"/>
                                        </StackPanel>

                                    </Grid>
                                </ContentControl>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding AppearancePassive.EmptyMaterialSelected}" Value="False">
                                        <Setter TargetName="enableDraconicLinesValueText" Property="Text" Value="{Binding Source='h054025c0gd806g418agb58dg6b325823b7cd', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AppearancePassive.EmptyMaterialSelected}" Value="True">
                                        <Setter TargetName="enableDraconicLinesValueText" Property="Text" Value="{Binding Source='h468f21a6g00c2g41c3g81d3gbe5291d6ab4d', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>


                    <ListBox x:Name="draconicLineColors" Tag="draconicLineColors" ItemsSource="{Binding SelectablePassiveColours}" SelectedItem="{Binding SelectedPassiveColour}" Template="{StaticResource AppearanceCarousel}" Visibility="Collapsed"/>

                    <ListBox Tag="piercing" ItemsSource="{Binding SelectablePiercings}" SelectedItem="{Binding SelectedPiercing}" Template="{StaticResource AppearanceCarousel}" Visibility="{Binding SelectablePiercings.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                    <ListBox x:Name="genitalsCarousel" Tag="genitals" Visibility="Collapsed" ItemsSource="{Binding SelectableGenitals}" SelectedItem="{Binding SelectedGenitals}" Template="{StaticResource AppearanceCarousel}"/>

                    <ListBox x:Name="hideClothes" Visibility="Collapsed">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource AppearanceListButtonTemplate}" HorizontalAlignment="Center">

                                    <Grid x:Name="displayGenitalsToggle" Tag="{StaticResource FalseValue}">

                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{Binding Tag, ElementName=displayGenitalsToggle, Converter={StaticResource InvertBoolConverter}}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <ls:LSRepeatButton.RenderTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="32"/>
                                            </ls:LSRepeatButton.RenderTransform>
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetName="displayGenitalsToggle" PropertyName="Tag" Value="{Binding Tag, ElementName=displayGenitalsToggle, Converter={StaticResource InvertBoolConverter}}"/>
                                                    <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{Binding Tag, ElementName=displayGenitalsToggle, Converter={StaticResource InvertBoolConverter}}"/>
                                                </b:EventTrigger>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding Tag, ElementName=displayGenitalsToggle}" Operator="Equal" RightOperand="{StaticResource TrueValue}"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>
                                        <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetName="displayGenitalsToggle" PropertyName="Tag" Value="{Binding Tag, ElementName=displayGenitalsToggle, Converter={StaticResource InvertBoolConverter}}"/>
                                                    <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{Binding Tag, ElementName=displayGenitalsToggle, Converter={StaticResource InvertBoolConverter}}"/>
                                                </b:EventTrigger>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding Tag, ElementName=displayGenitalsToggle}" Operator="Equal" RightOperand="{StaticResource TrueValue}"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSRepeatButton>

                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Source='h5d70015agdbd9g45c9g9270g7ee6876b5b9a', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource AppearanceCarouselTitleText}"/>

                                            <TextBlock x:Name="displayGenitalsValueText" Style="{StaticResource AppearanceCarouselValueText}"/>
                                        </StackPanel>

                                    </Grid>
                                </ContentControl>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Tag, ElementName=displayGenitalsToggle}" Value="True">
                                        <Setter TargetName="displayGenitalsValueText" Property="Text" Value="{Binding Source='h585635bdg10feg4babg9bb8gc3df3bf73ba6', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Tag, ElementName=displayGenitalsToggle}" Value="False">
                                        <Setter TargetName="displayGenitalsValueText" Property="Text" Value="{Binding Source='habf08f50g2d6bg4950g8cfeg3980512d8051', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>

                </StackPanel>

                <ControlTemplate.Triggers>

                    <DataTrigger Binding="{Binding HasNewRandomAppearance}" Value="True">
                        <Setter TargetName="newRandomAppearance" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="randomAppearancesCarousel" Property="Visibility" Value="Visible"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding (ls:MoveFocus.IsFocused), ElementName=newRandomAppearance}" Value="True">
                        <Setter TargetName="newRandomAppearance" Property="BoundEvent" Value="UIAccept"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="appearance">
                        <Setter TargetName="newRandomAppearance" Property="Command" Value="{Binding RandomAppearance}"/>
                        <Setter TargetName="daisyRace" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="daisySubRace" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding SelectedHair.IsNull, FallbackValue=False}" Value="False">
                        <Setter TargetName="hairColoring" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SelectedBeard.IsNull, FallbackValue=False}" Value="False">
                        <Setter TargetName="hairColoring" Property="Visibility" Value="Visible"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding SelectableGenitals.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                        <Setter TargetName="hideClothes" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="genitalsCarousel" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CoverNudity}" Value="True">
                        <Setter TargetName="hideClothes" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="genitalsCarousel" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                        <!-- Swen reqeuest, don't show genitals options for Daisy -->
                        <Setter TargetName="hideClothes" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="genitalsCarousel" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDragonborn}" Value="false"/>
                            <Condition Binding="{Binding SelectedOrigin.IsLockedAppearance }" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="age" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="freckles" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="frecklesIntensity" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="vitiligo" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding SelectedSubClass.IsDraconicSorcerer}" Value="True"/>
                            <Condition Binding="{Binding IsDragonborn}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="scales" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding SelectedSubClass.IsDraconicSorcerer}" Value="True"/>
                            <Condition Binding="{Binding IsDragonborn}" Value="False"/>
                            <Condition Binding="{Binding AppearancePassive.EmptyMaterialSelected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="scaleColors" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding SelectedSubClass.IsDraconicSorcerer}" Value="True"/>
                            <Condition Binding="{Binding IsDragonborn}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="draconicLines" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>


                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding SelectedSubClass.IsDraconicSorcerer}" Value="True"/>
                            <Condition Binding="{Binding IsDragonborn}" Value="True"/>
                            <Condition Binding="{Binding AppearancePassive.EmptyMaterialSelected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="draconicLineColors" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceBackgroundTemplate">
                <Grid>
                    <Rectangle x:Name="appearanceBackgroundShadow" HorizontalAlignment="Right" Width="{StaticResource appearancePanelBackgroundWidthSplitScreen}" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Layout}" Value="Common">
                        <Setter TargetName="appearanceBackgroundShadow" Property="Width" Value="{StaticResource appearancePanelBackgroundWidth}"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceItemSelectableBottomButtons">
                <StackPanel Orientation="Horizontal">

                    <ls:LSButton x:Name="selectButton" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=hd0c08193ga7f2g4a7eg8225g63748c7b3096,Converter={StaticResource TranslatedStringConverter}}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSInputBindingPressed" >
                                <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <!-- Toggle tooltips -->
                    <ls:LSButton x:Name="ToggleTooltips"
                                 Command="{Binding ToggleTooltipOnUIElement}"
                                 CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:UIWidget}}"
                                 BoundEvent="UIShowInfo"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}"
                                 Tag="{Binding Source='h2a8cab0cgbfb8g4890gbfbdg5a9426e29457', Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}"/>
                </StackPanel>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceItemSelectedBottomButtons">
                <StackPanel Orientation="Horizontal">

                    <ls:LSButton x:Name="selectButton" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=hd0c08193ga7f2g4a7eg8225g63748c7b3096,Converter={StaticResource TranslatedStringConverter}}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSInputBindingPressed" >
                                <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="backButton" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSInputBindingPressed" >
                                <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <!-- Toggle tooltips -->
                    <ls:LSButton x:Name="ToggleTooltips"
                                 Command="{Binding ToggleTooltipOnUIElement}"
                                 CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:UIWidget}}"
                                 BoundEvent="UIShowInfo"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}"
                                 Tag="{Binding Source='h2a8cab0cgbfb8g4890gbfbdg5a9426e29457', Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}"/>
                </StackPanel>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearancePanelTemplate">
                <DockPanel HorizontalAlignment="Right">
                    <TextBlock x:Name="headerText" DockPanel.Dock="Top" ls:TextBlockFormatter.SourceText="{Binding Source=h261cce55g1d1eg4c09g9675ge5c1be13e820, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                    <ScrollViewer Margin="0,50,0,0" VerticalScrollBarVisibility="Auto">
                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">
                            <b:Interaction.Triggers>
                                <b:DataTrigger Binding="{Binding FocusedElement.Tag, ElementName=CharacterCreation_c, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="True">
                                    <b:ChangePropertyAction TargetName="selectApperanceItem" PropertyName="IsEnabled" Value="True"/>
                                </b:DataTrigger>
                                <b:DataTrigger Binding="{Binding FocusedElement.Tag, ElementName=CharacterCreation_c, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="False">
                                    <b:ChangePropertyAction TargetName="selectApperanceItem" PropertyName="IsEnabled" Value="False"/>
                                </b:DataTrigger>

                                <b:DataTrigger Binding="{Binding IsEnabled, ElementName=selectApperanceItem}" Value="True">
                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{DynamicResource AppearanceItemSelectableBottomButtons}"/>
                                </b:DataTrigger>
                                <b:DataTrigger Binding="{Binding IsEnabled, ElementName=selectApperanceItem}" Value="False">

                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=IsVisible, ElementName=appearanceSelectedContents}" Operator="NotEqual" RightOperand="True"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>

                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{DynamicResource StandardBottomButtonsTemplate2}"/>
                                </b:DataTrigger>

                                <!-- Only happens for appearance tab when tab changed -->
                                <b:EventTrigger EventName="Unloaded">
                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{DynamicResource StandardBottomButtonsTemplate2}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <Control x:Name="appearanceList" Template="{StaticResource appearanceListTemplate}" ls:MoveFocus.IsMoveFocusScope="True"/>
                            <Control x:Name="appearanceSelectedContents" Visibility="Collapsed" Tag="" Width="{StaticResource appearancePanelWidth}"/>

                        </StackPanel>
                    </ScrollViewer>

                    <ls:LSButton x:Name="selectApperanceItem" BoundEvent="UIAccept">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="appearanceList" PropertyName="Visibility" Value="Collapsed"/>
                                <b:ChangePropertyAction TargetName="appearanceSelectedContents" PropertyName="Tag" Value="{Binding Path=FocusedElement.Tag, ElementName=CharacterCreation_c}"/>
                                <b:ChangePropertyAction TargetName="appearanceSelectedContents" PropertyName="Visibility" Value="Visible"/>
                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{DynamicResource AppearanceItemSelectedBottomButtons}"/>
                                <b:ChangePropertyAction TargetName="selectApperanceItem" PropertyName="IsEnabled" Value="False"/>
                                <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="backFromApperanceItem" BoundEvent="UICancel" IsEnabled="{Binding ElementName=appearanceSelectedContents, Path=IsVisible}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="appearanceList" PropertyName="Visibility" Value="Visible"/>
                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=appearanceList}"/>
                                <b:ChangePropertyAction TargetName="appearanceSelectedContents" PropertyName="Tag" Value=""/>
                                <b:ChangePropertyAction TargetName="appearanceSelectedContents" PropertyName="Visibility" Value="Collapsed"/>
                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{DynamicResource AppearanceItemSelectableBottomButtons}"/>
                                <b:ChangePropertyAction TargetName="selectApperanceItem" PropertyName="IsEnabled" Value="True"/>
                                <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                </DockPanel>
                <ControlTemplate.Triggers>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="daisyrace">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6020727bge0e3g4de7gaf3ag469c3b32b3d2', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}" Style="{StaticResource gameplayIconGridStyle}">
                                            <ListBox.Resources>
                                                <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                            </ListBox.Resources>
                                        </ListBox>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="daisysubrace">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h29d1d637g94bbg4f11g9bdfgbe0042b60e40', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}" Style="{StaticResource gameplayIconGridStyle}">
                                            <ListBox.Resources>
                                                <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                            </ListBox.Resources>
                                        </ListBox>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="heads">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3eee9b8dgc315g4cb8g90a3g50cea8a27c69', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableHeads}" SelectedItem="{Binding SelectedHead}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="skinColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hc81ba7bcgb2ccg4423ga050g253fd53ce2c9', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                        <ItemsControl Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding SkinColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableSkinColours}" SelectedItem="{Binding SelectedSkinColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="eyeColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding EyeColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedEyeColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="heterochromiaEyeColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hc6bfd120gde63g4c3ag99eag43e8f905a7d4', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding EyeColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedHeterochromiaEyeColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="tattoos">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3f96b6b8gd682g4b90ga8fdge34ccb965bbd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableTattoos}" SelectedItem="{Binding SelectedTattoo}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="tattooColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h0c6d2890g6a16g4e20ga2a1gcb15afa6e8d3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceTattoos.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableTattooColours}" SelectedItem="{Binding SelectedTattooColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="makeup">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbd793d8fg4b19g4efdga071g112ba7af47dd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableMakeup}" SelectedItem="{Binding SelectedMakeup}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="makeupColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                        <b:Interaction.Behaviors>
                                            <ls:CollectionFilterBehavior x:Name="IsDragonbornMakeupFilter" ItemsSource="{Binding AppearanceMakeup.ColorOptions}" Predicate="{Binding IsDragonbornPredicate}"/>
                                        </b:Interaction.Behaviors>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hd98545bbg8f42g437dg8f70gcb5f7a1bda8b', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding FilteredItems, ElementName=IsDragonbornMakeupFilter}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableMakeupColours}" SelectedItem="{Binding SelectedMakeupColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="lipMakeupColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                        <b:Interaction.Behaviors>
                                            <ls:CollectionFilterBehavior x:Name="IsDragonbornLipsMakeupFilter" ItemsSource="{Binding AppearanceLipsMakeup.ColorOptions}" Predicate="{Binding IsDragonbornPredicate}"/>
                                        </b:Interaction.Behaviors>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='ha96c9b3bg5d8dg4ebbgb7a8gbefe66c7b781', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding FilteredItems, ElementName=IsDragonbornLipsMakeupFilter}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableLipsMakeupColours}" SelectedItem="{Binding SelectedLipsMakeupColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="scars">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h408d8f2bgca7eg4d20gb0bag4d4a3318f1c5', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableScars}" SelectedItem="{Binding SelectedScar}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hair">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='haaecd709ga04eg4c33gb2a3gd5be989e5146', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableHair}" SelectedItem="{Binding SelectedHair}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hairColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding HairColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableHairColours}" SelectedItem="{Binding SelectedHairColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hairHighlights">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h9d4a4e08g81cdg4259g8bd1g80b47dbda3f3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHairHighlights.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableHighlightColours}" SelectedItem="{Binding SelectedHighlightColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hairGrays">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHairGraying.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableGrayingColours}" SelectedItem="{Binding SelectedGrayingColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="beards">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h5060d1edg2799g4388g9203gc42e380c68f8', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableBeards}" SelectedItem="{Binding SelectedBeard}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="horns">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h290f2542g9702g4651g8afdgdae1f08a12eb', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableHorns}" SelectedItem="{Binding SelectedHorn}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>


                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hornColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8f9581e8g4440g4cf5g8752g220535346a50', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHornColor.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableHornColours}" SelectedItem="{Binding SelectedHornColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="hornTipColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h33ea2bd3g91cag471cg8242gef7327983dbf', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHornTipColor.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectableHornTipColours}" SelectedItem="{Binding SelectedHornTipColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="scales">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h381a6c0bg214fg4968gae5cg9e5b8a8ffc20', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableScales}" SelectedItem="{Binding SelectedScales}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="scaleColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h85555614g40b2g459dgbfbfg76291036aebe', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearancePassive.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectablePassiveColours}" SelectedItem="{Binding SelectedPassiveColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="draconicLineColors">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7202f8ebgaa5dg411dgac62g3bf8986e28b3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ItemsControl Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearancePassive.ColorOptions}" Margin="0,50,0,0"/>

                                        <ListBox ItemsSource="{Binding SelectablePassiveColours}" SelectedItem="{Binding SelectedPassiveColour}" ItemTemplate="{StaticResource selectableColourTemplate}" Style="{StaticResource appearanceOverpanelListBoxStyle}" Margin="0,50,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="topofhead">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8949ad0egb0f8g4ea8gbf56g25a764a8bb34', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableTopOfHead}" SelectedItem="{Binding SelectedTopOfHead}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="chin">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h44344a58g63ccg44b2gb878gc5d3cdb31b17', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableChin}" SelectedItem="{Binding SelectedChin}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="jaw">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hdff3076bg631ag4c0egadbdgbf4a6f9d777e', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableJaw}" SelectedItem="{Binding SelectedJaw}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Tag, ElementName=appearanceSelectedContents}" Value="tail">
                        <Setter TargetName="appearanceSelectedContents" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Loaded">
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbb75a111g99e6g45afga2a6gaf73b748faa8', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>

                                        <ListBox ItemsSource="{Binding SelectableTail}" SelectedItem="{Binding SelectedTail}" Style="{StaticResource appearanceIconGridStyle}"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>



        </ResourceDictionary>
    </ls:UIWidget.Resources>


    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <!-- Start with Tooltips enabled -->
            <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>
            <b:InvokeCommandAction Command="{Binding OpenShowTutorialsQuestion}" CommandParameter="{StaticResource MessageBoxTutorialsCheck}"/>
        </b:EventTrigger>

        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=CharacterCreation_c}"/>
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusUp">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusDown">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusRight">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusLeft">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <b:Interaction.Behaviors>
        <ls:CollectionFilterBehavior x:Name="CustomOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsCustomOriginPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="PresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomOriginPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SelectablePresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomSelectableOriginPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="ClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionSortBehavior x:Name="SortedRaceSkills" ItemsSource="{Binding AllSkills.RaceProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedClassSkills" ItemsSource="{Binding AllSkills.ClassProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedExpertiseSkills" ItemsSource="{Binding AllSkills.ExpertiseSkills.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedSummarySkills" ItemsSource="{Binding ProgressionData.AllProgressions.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedPreparableSpells" ItemsSource="{Binding SpellPrepare.Preparable}" Comparer="{Binding SpellByLevelSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedPreparableSpellGroupsByLevel" ItemsSource="{Binding SpellPrepare.PreparableByLevel}" Comparer="{Binding SpellGroupByLevelSortComparer}" />
    </b:Interaction.Behaviors>

    <ls:UIWidget.ContentTemplate>
        <DataTemplate>

            <Grid x:Name="widgetBase" IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBoolConverter}}">

                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                        <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
                        <b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Hidden" />
                        <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
                        <b:ChangePropertyAction TargetName="readyInfoPage" PropertyName="Visibility" Value="Collapsed" />
                    </b:DataTrigger>

                    <b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                        <!-- Multiplayer Ready -->
                        <b:ChangePropertyAction TargetName="widgetBase" PropertyName="IsEnabled" Value="True" />
                        <b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Hidden" />
                        <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
                        <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
                        <b:ChangePropertyAction TargetName="readyInfoPage" PropertyName="Visibility" Value="Visible" />
                    </b:DataTrigger>
                </b:Interaction.Triggers>

                <Control x:Name="gamePlayPage" ls:MoveFocus.IsMoveFocusScope="True">

                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Grid>

                                <Grid>
                                    <Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>
                                    <Rectangle x:Name="leftSideShading" HorizontalAlignment="Left" Width="{StaticResource leftSidePanelBackgroundWidthSplitscreen}" Fill="{StaticResource LeftSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

                                    <!-- FocusScope for returning from Summary -->
                                    <Grid x:Name="leftSidePanels" ls:MoveFocus.IsMoveFocusScope="True" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="1218" Margin="0,140,0,0">

                                        <ContentControl x:Name="gameplaySubPanel" Content="{Binding .}">
                                            <b:Interaction.Triggers>
                                                <b:PropertyChangedTrigger Binding="{Binding Path=SelectedIndex, ElementName=gameplayTabs}">
                                                    <b:Interaction.Behaviors>
                                                        <b:ConditionBehavior>
                                                            <b:ConditionalExpression>
                                                                <b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=gameplayTabs}" Operator="NotEqual" RightOperand="-1"/>
                                                            </b:ConditionalExpression>
                                                        </b:ConditionBehavior>
                                                    </b:Interaction.Behaviors>
                                                    <!-- clear subtab panel -->
                                                    <b:ChangePropertyAction TargetName="gameplaySubPanel" PropertyName="DataContext" Value="{x:Null}"/>
                                                </b:PropertyChangedTrigger>
                                            </b:Interaction.Triggers>
                                        </ContentControl>

                                        <Control x:Name="gameplayPanel" Height="{StaticResource gameplayPanelHeight}"/>
                                                                             
                                    </Grid>

                                    <ls:LSButton x:Name="focusGameplayPanelButton" Visibility="Hidden" Content="" Style="{StaticResource ControllerButtonWBG}" 
                            DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='JumpToFromTab'}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,230,0,0">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click" >
                                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>


                                    <Control x:Name="appearanceBackground"/>
                                    <Control x:Name="appearancePanel" Height="{StaticResource appearancePanelHeight_SplitScreen}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,250,50,0"/>

                                    <Grid x:Name="tabNavigation" Tag="None">

                                        <b:Interaction.Triggers>
                                            <b:DataTrigger Binding="{Binding Tag, ElementName=tabNavigation}" Value="GoBack">
                                                <b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
                                                <b:ChangePropertyAction TargetName="tabNavigation" PropertyName="Tag" Value="None" />
                                            </b:DataTrigger>
                                        </b:Interaction.Triggers>

                                        <Rectangle x:Name="tabBarBackground" Width="3000" Height="{StaticResource TabsPanelHeight}" Fill="{StaticResource LeftSideShadingBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                                        <StackPanel x:Name="tabBar" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="216,0,0,0" Width="3000" Tag="CanJumpToAppearance">

                                            <Grid x:Name="tabBarClipper" Width="3000" ClipToBounds="True" Tag="430">

                                                <Grid x:Name="backplate" Width="{Binding GameplayBackplateWidth}" Height="{StaticResource TabsPanelHeight}" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Hidden">
                                                    <Grid.Background>
                                                        <LinearGradientBrush Opacity="1.0" StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0" Color="{StaticResource transparentBlack}"/>
                                                            <GradientStop Offset="0.5" Color="#70af8768"/>
                                                            <GradientStop Offset="1.0" Color="#b0af8768" />
                                                        </LinearGradientBrush>
                                                    </Grid.Background>

                                                    <!-- Set Backplate position - todo improve animation -->
                                                    <Grid.RenderTransform>
                                                        <TranslateTransform X="0" Y="0"/>
                                                    </Grid.RenderTransform>

                                                    <b:Interaction.Triggers>

                                                        <!-- Animated SelectedGameplayTabOffset -->
                                                        <b:PropertyChangedTrigger Binding="{Binding Path=DataContext.SelectedGameplayTabOffset, ElementName=gameplayTabs}">
                                                            <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                <b:ControlStoryboardAction.Storyboard>
                                                                    <Storyboard x:Name="slideBackplate">

                                                                        <DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
                                                                            <DoubleAnimation.To>
                                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">

                                                                                    <!-- Tab Offset (could be shared?) -->
                                                                                    <Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                                    <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
                                                                                    <Binding ElementName="tabBarClipper" Path="Tag"/>

                                                                                    <!-- Add backplate offset -->
                                                                                    <Binding ElementName="gameplayTabs" Path="DataContext.GameplayBackplateOffset"/>

                                                                                </MultiBinding>
                                                                            </DoubleAnimation.To>
                                                                        </DoubleAnimation>

                                                                    </Storyboard>
                                                                </b:ControlStoryboardAction.Storyboard>
                                                            </b:ControlStoryboardAction>

                                                            <!-- Ensure offset calculated after startup animations have completed -->
                                                            <ls:LSControlStoryboard ControlStoryboardOption="Play" CompletedCommand="{Binding SetupGameplayTabNavigation}" CompletedCommandParameter="{Binding ElementName=gameplayTabs}">
                                                                <ls:LSControlStoryboard.Storyboard>
                                                                    <Storyboard x:Name="initialBackplateWidthSetting" Duration="0:0:0.4">
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="backplate">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </ls:LSControlStoryboard.Storyboard>
                                                            </ls:LSControlStoryboard>

                                                        </b:PropertyChangedTrigger>

                                                        <!-- For when Splitscreen changes -->
                                                        <b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
                                                            <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                <b:ControlStoryboardAction.Storyboard>
                                                                    <Storyboard x:Name="slideBackplateSplitscreen">

                                                                        <DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
                                                                            <DoubleAnimation.To>
                                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">

                                                                                    <!-- Tab Offset (could be shared?) -->
                                                                                    <Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                                    <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
                                                                                    <Binding ElementName="tabBarClipper" Path="Tag"/>

                                                                                    <!-- Add backplate offset -->
                                                                                    <Binding ElementName="gameplayTabs" Path="DataContext.GameplayBackplateOffset"/>

                                                                                </MultiBinding>
                                                                            </DoubleAnimation.To>
                                                                        </DoubleAnimation>

                                                                    </Storyboard>
                                                                </b:ControlStoryboardAction.Storyboard>
                                                            </b:ControlStoryboardAction>                                                            
                                                        </b:PropertyChangedTrigger>

                                                    </b:Interaction.Triggers>
                                                </Grid>

                                                <!-- All the Gameplay Tabs -->
                                                <ListBox x:Name="gameplayTabs" Template="{StaticResource noScrollViewerListBoxTemplate}" VerticalAlignment="Center">

                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel x:Name="itemsPanel" IsItemsHost="True" Orientation="Horizontal">
                                                                <StackPanel.RenderTransform>
                                                                    <TranslateTransform X="0" Y="0"/>
                                                                </StackPanel.RenderTransform>

                                                                <b:Interaction.Triggers>

                                                                    <!-- Animated SelectedGameplayTabOffset -->
                                                                    <b:PropertyChangedTrigger Binding="{Binding Path=DataContext.SelectedGameplayTabOffset, ElementName=gameplayTabs}">
                                                                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                            <b:ControlStoryboardAction.Storyboard>
                                                                                <Storyboard x:Name="scrollTabs">

                                                                                    <DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
                                                                                        <DoubleAnimation.To>
                                                                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                                                <Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                                                <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
                                                                                                <!-- Added to center tab over related gameplay panel -->
                                                                                                <Binding ElementName="tabBarClipper" Path="Tag"/>
                                                                                            </MultiBinding>
                                                                                        </DoubleAnimation.To>
                                                                                    </DoubleAnimation>

                                                                                </Storyboard>
                                                                            </b:ControlStoryboardAction.Storyboard>
                                                                        </b:ControlStoryboardAction>
                                                                    </b:PropertyChangedTrigger>

                                                                    <!-- For when Splitscreen changes -->
                                                                    <b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
                                                                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                            <b:ControlStoryboardAction.Storyboard>
                                                                                <Storyboard x:Name="scrollTabsSplitscreen">

                                                                                    <DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
                                                                                        <DoubleAnimation.To>
                                                                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                                                <Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                                                <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
                                                                                                <!-- Added to center tab over related gameplay panel -->
                                                                                                <Binding ElementName="tabBarClipper" Path="Tag"/>
                                                                                            </MultiBinding>
                                                                                        </DoubleAnimation.To>
                                                                                    </DoubleAnimation>

                                                                                </Storyboard>
                                                                            </b:ControlStoryboardAction.Storyboard>
                                                                        </b:ControlStoryboardAction>
                                                                    </b:PropertyChangedTrigger>

                                                                </b:Interaction.Triggers>

                                                            </StackPanel>
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>

                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="Template" Value="{StaticResource gameplayTabTemplate2}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>

                                                    <b:Interaction.Triggers>
                                                        
                                                        <b:DataTrigger Binding="{Binding ElementName=gamePlayPage, Path=IsVisible}" Value="True">
                                                            <b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
                                                        </b:DataTrigger>

                                                        <!-- Only set if not in a subtab -->
                                                        <b:EventTrigger EventName="SelectionChanged">
                                                            <b:Interaction.Behaviors>
                                                                <b:ConditionBehavior>
                                                                    <b:ConditionalExpression>
                                                                        <b:ComparisonCondition LeftOperand="{Binding ElementName=gameplayTabs, Path=SelectedIndex}" Operator="NotEqual" RightOperand="-1"/>
                                                                    </b:ConditionalExpression>
                                                                </b:ConditionBehavior>
                                                            </b:Interaction.Behaviors>
                                                            <b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="Tag" Value="{Binding SelectedIndex, ElementName=gameplayTabs}" />
                                                        </b:EventTrigger>

                                                    </b:Interaction.Triggers>

                                                    <ListBoxItem x:Name="originTab" Tag="origin" IsSelected="True"/>

                                                    <ListBoxItem x:Name="raceTab" Tag="race"/>
                                                    <ListBoxItem x:Name="subRaceTab" Tag="subrace" IsEnabled="{Binding SelectableSubRaces.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

                                                    <ListBoxItem x:Name="classTab" Tag="class"/>
                                                    <ListBoxItem x:Name="subClassTab" Tag="subclass" IsEnabled="{Binding SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                                    <ListBoxItem x:Name="deityTab" Tag="deity" IsEnabled="{Binding SelectableDeities.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                                    <ListBoxItem x:Name="spellPrepTab" Tag="spellprep" IsEnabled="{Binding SpellPrepare.Preparable.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

                                                    <ListBoxItem x:Name="backgroundTab" Tag="background"/>

                                                    <ListBoxItem x:Name="abilityTab" Tag="ability"/>
                                                    <ListBoxItem x:Name="skillsTab" Tag="skills" IsEnabled="{Binding AllSkills.ClassProficientSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                                    <ListBoxItem x:Name="expertiseTab" Tag="expertise" IsEnabled="{Binding AllSkills.ExpertiseSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

                                                    <ListBoxItem x:Name="appearanceTab" Tag="appearance"/>

                                                </ListBox>

                                                <Rectangle x:Name="leftSideTabFade" Width="200" Height="{StaticResource TabsPanelHeight}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush Opacity="1.0" StartPoint="0,0" EndPoint="1,0">
                                                            <GradientStop Offset="0" Color="Black"/>
                                                            <GradientStop Offset="0.25" Color="#a0000000"/>
                                                            <GradientStop Offset="1.0" Color="{StaticResource transparentBlack}" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>

                                            </Grid>

                                            <Grid x:Name="selectedTabUnderline" HorizontalAlignment="Left" Margin="102,-56,0,0" Width="600">
                                                <!-- Variable width element, always centered in surrounding Grid -->
                                                <!-- Width for animation -->
                                                <ls:LSNineSliceImage x:Name="tabSelector" Style="{StaticResource tabSelectorStyle}" Width="0" Margin="0,-20,0,20"/>
                                            </Grid>

                                        </StackPanel>

                                        <StackPanel x:Name="tabBarButtons" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,0,0,0">

                                            <ls:LSButton x:Name="prevTabButton" 
                                                         IsEnabled="{Binding HasPrevGameplayTab}"
                                                         Command="{Binding DataContext.PrevGameplayTab, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                                         CommandParameter="{Binding ElementName=gameplayTabs}"
                                                         ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
                                                         Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabPrev, Converter={StaticResource FindInputEventConverter}}"
                                                         BoundEvent="UITabPrev"
                                                         Margin="-20,0,-20,0"/>

                                            <ls:LSButton x:Name="nextTabButton" 
                                                         IsEnabled="{Binding HasNextGameplayTab}"
                                                         Command="{Binding DataContext.NextGameplayTab, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                                         CommandParameter="{Binding ElementName=gameplayTabs}"
                                                         ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
                                                         Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabNext, Converter={StaticResource FindInputEventConverter}}"
                                                         BoundEvent="UITabNext"
                                                         Margin="-20,0,-20,0"/>
                                        </StackPanel>

                                        <Border Margin="{StaticResource ButtonHint.Margin.Left}" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                            <ls:LSButton x:Name="backFromAppearanceButton" Margin="432,0,0,0"
                                                         ContentTemplate="{StaticResource ControllerButtonHint}" 
                                                         Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICreate, Converter={StaticResource FindInputEventConverter}}" 
                                                         BoundEvent="UICreate" 
                                                         Tag="{Binding Source=hb6342179gece9g4eddgbbe8ga11c8273bbeb,Converter={StaticResource TranslatedStringConverter}}" >
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="Click">
                                                        <b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="SelectedIndex" Value="{Binding Tag, ElementName=tabBar}" />
                                                        <b:ChangePropertyAction TargetName="tabBar" PropertyName="Tag" Value="CanJumpToAppearance" />
                                                        <b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ls:LSButton>
                                        </Border>

                                        <ls:LSNineSliceImage x:Name="InvalidAppearanceError" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Collapsed" Style="{StaticResource MissingRequirementsErrorStyle}" Margin="0,0,0,430">
                                            <TextBlock Foreground="{StaticResource CCTabToDo}" Text="{Binding AppearanceValidationError}" VerticalAlignment="Center" />
                                        </ls:LSNineSliceImage>
                                        <ls:LSNineSliceImage x:Name="MissingRequirementsMainError" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Collapsed" Style="{StaticResource MissingRequirementsErrorStyle}" Margin="0,0,0,290" ContentTemplate="{StaticResource MissingRequirementsErrorTemplate}" Content=""/>

                                        <ContentControl x:Name="gotoNamingButton" Template="{StaticResource buttonBackplateTemplate}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,128">
                                            <ls:LSButton IsEnabled="{Binding IsCharacterCompleteExceptName}"
                                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIDelete, Converter={StaticResource FindInputEventConverter}}" 
                                                        BoundEvent="UIDelete" 
                                                        Tag="{Binding Source=h29f5143dgf3f8g4185ga82ag411205073b03,Converter={StaticResource TranslatedStringConverter}}">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="Click">
                                                        <b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Collapsed" />
                                                        <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ls:LSButton>
                                        </ContentControl>
                                            
                                    </Grid>

                                </Grid>

                                <Grid x:Name="summary" Visibility="Collapsed" HorizontalAlignment="Right">
                                    <b:Interaction.Triggers>
                                        <b:DataTrigger Binding="{Binding ElementName=summary, Path=IsVisible}" Value="False">
                                            <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                            <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                            <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                            <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                            <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                        </b:DataTrigger>
                                    </b:Interaction.Triggers>

                                    <Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}">
                                        <Rectangle.RenderTransform>
                                            <ScaleTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>

                                    <Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Grid.RenderTransform>

                                        <Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

                                        <ls:LSInputBinding x:Name="backFromFocusedSummary" IsEnabled="{Binding IsEnabled, ElementName=summaryPanel}" BoundEvent="UICancel">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="LSInputBindingReleased" >
                                                    <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                                </b:EventTrigger>
                                                <b:EventTrigger EventName="LSInputBindingPressed">
                                                    <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSInputBinding>

                                        <ls:LSButton x:Name="focusSummaryPanelButton" Content="" Style="{StaticResource ControllerButtonWBG}" 
                            DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="False" />
                                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
                                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
                                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource SummaryBottomButtonsTemplate}"/>
                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=summaryPanel}"/>
                                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>

                                    </Grid>
                                </Grid>

                                <StackPanel  Style="{StaticResource ButtonHint.Container.Right}">
                                    <Control x:Name="bottomButtons" Template="{StaticResource StandardBottomButtonsTemplate2}"/>
                                </StackPanel>

                            </Grid>

                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsCharacterCompleteExceptName}" Value="False">
                                    <Setter TargetName="MissingRequirementsMainError" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AppearanceValidationError, Converter={StaticResource NullToBoolFalseConverter}, ConverterParameter='EmptyString', FallbackValue=False}" Value="True">
                                    <Setter TargetName="InvalidAppearanceError" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedOrigin.IsLockedAppearance}" Value="True">
                                    <Setter TargetName="appearanceTab" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>

                                <!-- Split Screen variation -->
                                <DataTrigger Binding="{Binding Layout}" Value="Common">
                                    <Setter TargetName="leftSidePanels" Property="Margin" Value="200,140,0,0"/>
                                    <Setter TargetName="tabBarClipper" Property="Tag" Value="580"/>
                                    <Setter TargetName="tabBar" Property="Margin" Value="260,0,0,0"/>
                                    <Setter TargetName="selectedTabUnderline" Property="Margin" Value="252,-54,0,0"/>
                                    <Setter TargetName="appearancePanel" Property="Height" Value="{StaticResource appearancePanelHeight}"/>
                                    <Setter TargetName="appearancePanel" Property="Margin" Value="0,250,200,0"/>
                                    <Setter TargetName="leftSideShading" Property="Width" Value="{StaticResource leftSidePanelBackgroundWidth}"/>
                                </DataTrigger>

                                <!-- Animated Tabs Backplate Width matching -->
                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
                                    <Setter TargetName="backplate" Property="Width">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="raceTab"/>
                                                <Binding Path="ActualWidth" ElementName="subRaceTab"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">
                                    <Setter TargetName="backplate" Property="Width">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="raceTab"/>
                                                <Binding Path="ActualWidth" ElementName="subRaceTab"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
                                    <Setter TargetName="backplate" Property="Width">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="classTab"/>
                                                <Binding Path="ActualWidth" ElementName="subClassTab"/>
                                                <Binding Path="ActualWidth" ElementName="deityTab"/>
                                                <Binding Path="ActualWidth" ElementName="spellPrepTab"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
                                    <Setter TargetName="backplate" Property="Width">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="classTab"/>
                                                <Binding Path="ActualWidth" ElementName="subClassTab"/>
                                                <Binding Path="ActualWidth" ElementName="deityTab"/>
                                                <Binding Path="ActualWidth" ElementName="spellPrepTab"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Tag, ElementName=tabBar}" Value="CanJumpToAppearance">
                                    <Setter TargetName="backFromAppearanceButton" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsEnabled, ElementName=leftSidePanels}" Value="False">
                                    <Setter TargetName="gotoNamingButton" Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Layout}" Value="Common">
                                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
                                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="summary" Property="Tag" Value=""/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
                                    <Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="summary" Property="Tag" Value=""/>
                                </DataTrigger>

                                <!--
                                Gameplay Panel Content 
                                -->

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="origin">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel Margin="0,0,0,50">
                                                    <DockPanel DockPanel.Dock="Top" Width="1218">
                                                        <b:Interaction.Triggers>
                                                            <b:EventTrigger EventName="Loaded">
                                                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
                                                            </b:EventTrigger>
                                                        </b:Interaction.Triggers>

                                                        <Control Template="{StaticResource setOverviewCamera}"/>

                                                        <!-- Used to set the SelectedOrigin back to Custom Origin -->
                                                        <ListBox DockPanel.Dock="Top" x:Name="allOrigins" Visibility="Collapsed" ItemsSource="{Binding SelectableOrigins}" SelectedItem="{Binding SelectedOrigin}"/>

                                                        <ListBox DockPanel.Dock="Top" x:Name="customCarousel" SelectedIndex="-1">
                                                            <b:Interaction.Triggers>
                                                                <b:DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
                                                                    <b:ChangePropertyAction TargetName="allOrigins" PropertyName="SelectedIndex" Value="0" />
                                                                </b:DataTrigger>
                                                                <b:DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
                                                                    <b:ChangePropertyAction TargetName="allOrigins" PropertyName="SelectedItem" Value="{Binding ElementName=originCarousel, Path=SelectedItem}" />
                                                                </b:DataTrigger>

                                                                <b:EventTrigger EventName="Loaded">
                                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                                </b:EventTrigger>

                                                            </b:Interaction.Triggers>
                                                            <ListBox.Template>
                                                                <ControlTemplate>
                                                                    <Grid>
                                                                        <Image Source="{StaticResource CarouselBg}" Opacity="0.8" Stretch="None" Margin="0,-180,-10,0"/>

                                                                        <Grid Height="300" HorizontalAlignment="Center" VerticalAlignment="Top">
                                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                <Image x:Name="iconL" Width="200" Height="200" Opacity="{StaticResource DisabledOpacity}"/>
                                                                                <Image x:Name="iconC" Width="300" Height="300"/>
                                                                                <Image x:Name="iconR" Width="200" Height="200" Opacity="{StaticResource DisabledOpacity}"/>
                                                                            </StackPanel>
                                                                        </Grid>

                                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,300,0,0">
                                                                            <Image x:Name="dot0" Source="{StaticResource DotOff}" Stretch="None" Width="44" Height="44" Margin="-7,0,-7,0"/>
                                                                            <Image x:Name="dot1" Source="{StaticResource DotOff}" Stretch="None" Width="44" Height="44" Margin="-7,0,-7,0"/>
                                                                        </StackPanel>

                                                                        <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource ListButtonTemplate}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,350,0,0">
                                                                            <Grid>
                                                                                <ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0"
                                            Command="{Binding DataContext.PrevItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                                                                                    <ls:LSButton.RenderTransform>
                                                                                        <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                                                    </ls:LSButton.RenderTransform>
                                                                                </ls:LSButton>
                                                                                <ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0"
                                            Command="{Binding DataContext.NextItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" SoundID="{DynamicResource CarouselButtonSoundEvent}"/>

                                                                                <TextBlock x:Name="cTxt" Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Style="{StaticResource IconCarouselText}"/>

                                                                            </Grid>
                                                                        </ContentControl>

                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
                                                                            <Setter TargetName="iconL" Property="Visibility" Value="Hidden"/>
                                                                            <Setter TargetName="iconC" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/CustomCharacter.png"/>
                                                                            <Setter TargetName="iconR" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png"/>
                                                                            <Setter TargetName="dot0" Property="Source" Value="{StaticResource DotOn}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
                                                                            <Setter TargetName="iconL" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/CustomCharacter.png"/>
                                                                            <Setter TargetName="iconC" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png"/>
                                                                            <Setter TargetName="iconR" Property="Visibility" Value="Hidden"/>
                                                                            <Setter TargetName="dot1" Property="Source" Value="{StaticResource DotOn}"/>
                                                                        </DataTrigger>

                                                                        <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=SelectablePresetOriginsCollection}" Value="0">
                                                                            <Setter TargetName="iconL" Property="Visibility" Value="Hidden"/>
                                                                            <Setter TargetName="iconR" Property="Visibility" Value="Hidden"/>
                                                                            <Setter TargetName="dot1" Property="Visibility" Value="Collapsed"/>
                                                                            <Setter TargetName="leftBtn" Property="IsEnabled" Value="False"/>
                                                                            <Setter TargetName="rightBtn" Property="IsEnabled" Value="False"/>
                                                                        </DataTrigger>

                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ListBox.Template>

                                                            <ListBoxItem x:Name="custom" Content="{Binding Source=hf50f6ecagc528g419fg9452g3f6da7e20a90, Converter={StaticResource TranslatedStringConverter}}"/>
                                                            <ListBoxItem x:Name="origin" Content="{Binding Source=hdbd3c4acg4848g48f6g9a4cg2db477ee9b28, Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ListBox>

                                                        <Control DockPanel.Dock="Top" x:Name="originControls"/>

                                                        <ls:LSButton DockPanel.Dock="Bottom" x:Name="PlayIntroduction" ContentTemplate="{StaticResource ControllerButtonHint}"
                                                                     Tag="{Binding Source='h0a5097d1g8471g4a05ga294gf9549ecf2151', Converter={StaticResource TranslatedStringConverter}}" 
                                                                     Command="{Binding PlayOriginTimeline}"
                                                                     Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
                                                                     BoundEvent="UIAccept"
                                                                     TapTime="{StaticResource DefaultButtonTapTime}"
                                                                     Visibility="Collapsed"
                                                                     Margin="0,32,0,0"/>

                                                        <Viewbox StretchDirection="DownOnly" Stretch="Uniform">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>
                                                        </Viewbox>

                                                    </DockPanel>


                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}" ls:ScrollViewerHelper.VerticalScrollOffsetMargin="300">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <StackPanel x:Name="customControls" Visibility="Collapsed">
                                                                <Control x:Name="bodyType" Template="{StaticResource BodyTypeChoice}" HorizontalAlignment="Center" Margin="0,50,0,0"/>
                                                                <Control x:Name="identity" Template="{StaticResource IdentityChoice}" HorizontalAlignment="Center" Margin="0,50,0,0"/>

                                                                <!-- Randomisation controls -->
                                                                <Control Template="{StaticResource ChangeRandomCharacterCarouselTemplate}" Margin="0,72,0,0"/>

                                                            </StackPanel>
                                                        </StackPanel>
                                                    </ScrollViewer>

                                                </DockPanel>
                                                <ControlTemplate.Triggers>

                                                    <DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="True">
                                                        <Setter TargetName="customCarousel" Property="SelectedIndex" Value="0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="False">
                                                        <Setter TargetName="customCarousel" Property="SelectedIndex" Value="1"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
                                                        <Setter TargetName="customControls" Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
                                                        <Setter TargetName="originControls" Property="Template" Value="{StaticResource originControlsTemplate}"/>
                                                        <Setter TargetName="PlayIntroduction" Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding SelectedRace}" Value="{x:Null}">
                                                        <Setter TargetName="bodyType" Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <StackPanel x:Name="raceCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

                                                        <ListBox x:Name="raceCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Rectangle x:Name="raceIcon" Fill="{StaticResource CCIconSelected}" Style="{StaticResource RaceIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                            <Setter TargetName="raceIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="raceIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="raceIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                        <ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding InfoRaceDescription}" Style="{StaticResource CarouselSideDescriptionText}"/>
                                                        </ContentControl>

                                                    </StackPanel>

                                                    <Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=RaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.RaceProgression}" HorizontalAlignment="Center"/>

                                                        </StackPanel>

                                                    </ScrollViewer>

                                                </DockPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <StackPanel x:Name="subraceCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

                                                        <ListBox x:Name="subraceCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Rectangle x:Name="raceIcon" Fill="{StaticResource CCIconSelected}" Style="{StaticResource RaceIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                            <Setter TargetName="raceIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="raceIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="raceIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                        <ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Race.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
                                                        </ContentControl>

                                                    </StackPanel>

                                                    <Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.SubRaceProgression}" HorizontalAlignment="Center"/>

                                                        </StackPanel>
                                                    </ScrollViewer>

                                                </DockPanel>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <StackPanel x:Name="classCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

                                                        <ListBox x:Name="classCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableClasses}" SelectedItem="{Binding SelectedClass}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Image x:Name="classIcon" Style="{StaticResource ClassIconStyle}" Stretch="None"/>
                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                            <Setter TargetName="classIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="classIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="classIcon" Property="Stretch" Value="Uniform"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                        <ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedClass.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
                                                        </ContentControl>

                                                    </StackPanel>

                                                    <Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=ClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                            <Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.ClassProgression}" HorizontalAlignment="Center"/>

                                                        </StackPanel>
                                                    </ScrollViewer>

                                                </DockPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <StackPanel x:Name="subclassCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

                                                        <ListBox x:Name="subclassCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableSubClasses}" SelectedItem="{Binding SelectedSubClass}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Image x:Name="classIcon" Style="{StaticResource ClassIconStyle}" Stretch="None"/>
                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                            <Setter TargetName="classIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="classIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                            <Setter TargetName="classIcon" Property="Stretch" Value="Uniform"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                        <ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedSubClass.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
                                                        </ContentControl>

                                                    </StackPanel>

                                                    <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left">

                                                        <Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

                                                        <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                            <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                                <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                                <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                                <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                                <Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.SubClassProgression}" HorizontalAlignment="Center"/>

                                                            </StackPanel>
                                                        </ScrollViewer>

                                                    </StackPanel>

                                                </DockPanel>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="deity">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <ListBox x:Name="deityCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableDeities}" SelectedItem="{Binding SelectedDeity}">
                                                                <ListBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Rectangle x:Name="deityIcon" Fill="{StaticResource CCIconSelected}" Style="{StaticResource DeityIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
                                                                        <DataTemplate.Triggers>
                                                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                                <Setter TargetName="deityIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                                <Setter TargetName="deityIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                                <Setter TargetName="deityIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
                                                                            </DataTrigger>
                                                                        </DataTemplate.Triggers>
                                                                    </DataTemplate>
                                                                </ListBox.ItemTemplate>
                                                            </ListBox>

                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedDeity.Description}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

                                                        </StackPanel>
                                                    </ScrollViewer>
                                                </StackPanel>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Control Template="{StaticResource spellPrepTemplate}">
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>
                                                </Control>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="background">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <ListBox x:Name="backgroundCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableBackgrounds}" SelectedItem="{Binding SelectedBackground}">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Rectangle x:Name="backgroundIcon" Fill="{StaticResource CCIconSelected}" Style="{StaticResource BackgroundIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                                        <Setter TargetName="backgroundIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                        <Setter TargetName="backgroundIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
                                                                        <Setter TargetName="backgroundIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
                                                                    </DataTrigger>
                                                                </DataTemplate.Triggers>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>

                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.BackgroundDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h230f60c6g161fg481bgbe52g42bc264618dd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource FeatureListHeaderText}"/>

                                                            <Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.BackgroundProgression}" HorizontalAlignment="Center"/>

                                                        </StackPanel>
                                                    </ScrollViewer>

                                                </StackPanel>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="ability">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>

                                                    <StackPanel VerticalAlignment="Top">
                                                        <b:Interaction.Triggers>
                                                            <b:EventTrigger EventName="Loaded">
                                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                                            </b:EventTrigger>
                                                        </b:Interaction.Triggers>

                                                        <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h711b5e8bgb67bg43f7gac08g36b2e2466acd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,50,0,0">
                                                            <TextBlock x:Name="AssignAbilityPointsTitle" ls:TextBlockFormatter.SourceText="{Binding Source='h72161eb0g8981g45cfgba63ga76e152e1fe9', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}"/>
                                                            <TextBlock x:Name="AssignAbilityPointsValue" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" Margin="20,0,0,0">
                                                    <Run Text="{Binding UsedAbilityPoints}"/><Run Text="{Binding TotalAbilityPoints, StringFormat='/{0}'}"/>
                                                            </TextBlock>
                                                        </StackPanel>

                                                        <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                                                            <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                                <ItemsControl x:Name="abilities" ItemsSource="{Binding DummyCharacter.Stats.Abilities}" ItemTemplate="{StaticResource changeAbilityTemplate}" Margin="0,50,0,0">
                                                                    <ItemsControl.Resources>
                                                                        <ControlTemplate x:Key="buttonsAndValue">
                                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="400,0,0,0">
                                                                                <ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" IsEnabled="{Binding CanDecrease}" Command="{Binding DataContext.DecreaseAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center" SoundID="UI_HUD_CC_DecreaseAbility">
                                                                                    <ls:LSButton.RenderTransform>
                                                                                        <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                                                    </ls:LSButton.RenderTransform>
                                                                                </ls:LSButton>

                                                                                <Grid VerticalAlignment="Center" MinWidth="80">
                                                                                    <TextBlock x:Name="value" ls:TextBlockFormatter.SourceText="{Binding Value}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" HorizontalAlignment="Center"/>
                                                                                </Grid>

                                                                                <ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" IsEnabled="{Binding CanIncrease}" Command="{Binding DataContext.IncreaseAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center" SoundID="UI_HUD_CC_IncreaseAbility"/>
                                                                            </StackPanel>
                                                                        </ControlTemplate>
                                                                    </ItemsControl.Resources>
                                                                </ItemsControl>

                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbf77d20fgab50g4611g9e95gbb3de258ae75', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}" Margin="0,50,0,0"/>

                                                                <ItemsControl ItemsSource="{Binding RaceProgressionDetails.AbilityBonusSelection}" Margin="0,50,0,0">
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True">
                                                                                <Grid VerticalAlignment="Center" Margin="50,0,50,0">

                                                                                    <TextBlock x:Name="bonus" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                                                        <TextBlock.Text>
                                                                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                                                                <Binding Source="hcb0e1e92ga5eeg4823g8e03gee3c7bdf9b58"/>
                                                                                                <Binding Path="AbilityBonus"/>
                                                                                            </MultiBinding>
                                                                                        </TextBlock.Text>
                                                                                    </TextBlock>

                                                                                    <ListBox x:Name="abilityBonuses" ItemsSource="{Binding BonusAbilities}" SelectedIndex="{Binding SelectedIndex}">

                                                                                        <ListBox.Template>
                                                                                            <ControlTemplate>
                                                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                                                                                                    <ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" Command="{Binding DataContext.SelectPrevAbilityBonus, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" SoundID="{DynamicResource CarouselButtonSoundEvent}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center">
                                                                                                        <ls:LSButton.RenderTransform>
                                                                                                            <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                                                                        </ls:LSButton.RenderTransform>
                                                                                                    </ls:LSButton>

                                                                                                    <Grid VerticalAlignment="Center" MinWidth="400">

                                                                                                        <Control Template="{StaticResource AbilityDisplayName}" DataContext="{Binding SelectedItem, ElementName=abilityBonuses}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" HorizontalAlignment="Center"/>

                                                                                                    </Grid>

                                                                                                    <ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" Command="{Binding DataContext.SelectNextAbilityBonus, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" SoundID="{DynamicResource CarouselButtonSoundEvent}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center"/>

                                                                                                </StackPanel>
                                                                                            </ControlTemplate>
                                                                                        </ListBox.Template>
                                                                                    </ListBox>
                                                                                </Grid>
                                                                            </ContentControl>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>

                                                                <!-- Add Use Recommended as a button -->
                                                                <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" IsEnabled="{Binding CanUseRecommendedAbilities}" Margin="0,50,0,0">
                                                                    <Grid>

                                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                            <Control x:Name="img" Visibility="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base, Converter={StaticResource BoolToVisibleConverter}}"  DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" Template="{StaticResource ControllerButton.ImageSwitcher}" Width="{DynamicResource ScaledControllerHintSize}" Height="{DynamicResource ScaledControllerHintSize}" VerticalAlignment="Center" Margin="26,0,-10,0"/>

                                                                            <TextBlock x:Name="useRecommendedText" Text="{Binding Source='h44d84d6fg14d8g4606gb563gf458f155defa', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource IconCarouselText}"/>
                                                                        </StackPanel>

                                                                        <ls:LSInputBinding IsEnabled="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}" BoundEvent="UIAccept">
                                                                            <b:Interaction.Triggers>
                                                                                <b:EventTrigger EventName="LSInputBindingReleased">
                                                                                    <b:InvokeCommandAction Command="{Binding DataContext.UseRecommendedAbilities, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="new"/>
                                                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=abilities}"/>
                                                                                </b:EventTrigger>
                                                                            </b:Interaction.Triggers>
                                                                        </ls:LSInputBinding>

                                                                    </Grid>
                                                                </ContentControl>

                                                            </StackPanel>
                                                        </ScrollViewer>

                                                    </StackPanel>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding CanUseRecommendedAbilities}" Value="False">
                                                        <Setter TargetName="useRecommendedText" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding UnusedAbilityPoints, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter TargetName="AssignAbilityPointsTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                        <Setter TargetName="AssignAbilityPointsValue" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>


                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="skills">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel>
                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <Control Template="{StaticResource skillProficiencyPanelTemplate}"/>
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="expertise">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel>
                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <Control Template="{StaticResource skillExpertisePanelTemplate}"/>
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>


                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="appearance">

                                    <Setter TargetName="leftSideShading" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="gameplayPanel" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>

                                    <Setter TargetName="appearanceBackground" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Appearance"/>
                                                        </b:EventTrigger>
                                                        <b:EventTrigger EventName="Unloaded">
                                                            <b:ChangePropertyAction TargetName="tabBar" PropertyName="Tag" Value="CanJumpToAppearance" />
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <Control x:Name="setCameras" Template="{StaticResource setAppearanceCamera_Splitscreen}"/>
                                                    <Control Template="{StaticResource AppearanceBackgroundTemplate}"/>

                                                    <Grid x:Name="dummyMotionKey" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="50,0,0,200">
                                                        <Image Source="{StaticResource CameraActionIndication}" Stretch="None"/>
                                                        <Image Source="{StaticResource CameraActionStickIcon}" Stretch="None" Margin="0,8,0,0"/>
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Layout}" Value="Common">
                                                        <Setter TargetName="setCameras" Property="Template" Value="{StaticResource setAppearanceCamera}"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="appearancePanel" Property="Template" Value="{StaticResource AppearancePanelTemplate}"/>

                                </DataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <Control x:Name="namingPage" Visibility="Collapsed">
                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Grid>
                                <b:Interaction.Triggers>
                                    <b:DataTrigger Binding="{Binding ElementName=namingPage, Path=Visibility}" Value="Visible">
                                        <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Naming"/>
                                    </b:DataTrigger>
                                </b:Interaction.Triggers>

                                <Control Template="{StaticResource setNamingCamera}" Visibility="{Binding Visibility, ElementName=namingPage}"/>

                                <Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>
                                
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,128">

                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Loaded">
                                            <ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>

                                    <TextBlock x:Name="CharacterNameHeader" ls:TextBlockFormatter.SourceText="{Binding Source=hfc928d2ega3a9g420egbeb5g0b20ab704959, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                    <Grid MinWidth="1100">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Rectangle Grid.Column="0" Fill="{StaticResource CCTextSpecial}" Opacity="0.8" Height="100"/>

                                        <ls:LSTextBox Grid.Column="0" x:Name="characterName" Text="{Binding CharacterName}" IsEnabled="{Binding CanEditName}" MaxLength="20" TextImmediateSourceUpdate="True" Foreground="{StaticResource CCTextPrimary}" FontSize="{StaticResource ScaledMassiveFontSize}" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" ProfanityFilter="True" Margin="16,0"/>

                                        <Control Grid.Column="0" x:Name="frame" Visibility="{Binding ElementName=characterName, Path=IsFocused, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter=True}" Template="{StaticResource FocusedListItemIndicatorTemplate}" Margin="-20,0" />
                                    </Grid>

                                    <ls:LSButton x:Name="focusNaming" IsEnabled="{Binding CanEditName}" Visibility="{Binding ElementName=characterName, Path=IsFocused, Converter={StaticResource BoolToHiddenConverter}}" BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=h5cd3cabag657ag4abfga33fg9b1b2808ee7f,Converter={StaticResource TranslatedStringConverter}}">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click">
                                                <noesis:SetFocusAction TargetName="characterName"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ContentPresenter x:Name="MissingRequirementsError" HorizontalAlignment="Center" Visibility="Collapsed" Margin="50,0,0,-20" ContentTemplate="{StaticResource MissingRequirementsErrorTemplate}" Content=""/>

                                    <ContentControl Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" Margin="50,0,0,0">

                                        <ls:LSButton x:Name="gotoDaisyButton"
                                                         ContentTemplate="{StaticResource ControllerButtonHint}" 
                                                         Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIDelete, Converter={StaticResource FindInputEventConverter}}" 
                                                         BoundEvent="UIDelete" 
                                                         Tag="{Binding Source=hddd20b39g5fc5g47ccgaf40g3ac1ed6a5da0,Converter={StaticResource TranslatedStringConverter}}">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click">
                                                    <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
                                                    <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>
                                    </ContentControl>

                                </StackPanel>

                                <!-- Naming Page Summary -->
                                <Grid x:Name="summary" Visibility="Collapsed" HorizontalAlignment="Right">
                                    <Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

                                    <Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Grid.RenderTransform>

                                        <Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

                                        <ls:LSButton x:Name="focusGameplayPanelButton" Visibility="Hidden" Content="" Style="{StaticResource ControllerButtonWBG}" 
                            DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c" Reset="True"/>
                                                    <b:InvokeCommandAction Command="{Binding DataContext.HideTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>

                                        <ls:LSButton x:Name="focusSummaryPanelButton" Content="" Style="{StaticResource ControllerButtonWBG}" 
                            DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click" >
                                                    <b:InvokeCommandAction Command="{Binding DataContext.EnableTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
                                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
                                                    <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=summaryPanel}"/>
                                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>

                                    </Grid>
                                </Grid>

                                <!-- Naming Page Bottom Buttons -->
                                <StackPanel Style="{StaticResource ButtonHint.Container.Right}">

                                    <ls:LSButton x:Name="showSummary" Visibility="{Binding ElementName=summary, Path=Visibility, Converter={StaticResource InvertVisibilityConverter}}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UISort" Tag="{Binding Source=h890f4cddg2bdcg4bb2gb73eg43fe16b11b08,Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click">
                                                <b:ChangePropertyAction TargetName="summary" PropertyName="Tag" Value="ShowIfPossible" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>
                                    <ls:LSButton x:Name="hideSummary" Visibility="{Binding ElementName=summary, Path=Visibility}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UISort" Tag="{Binding Source=h70ec62ddg0cfcg4512ga0c6gbc591945b75b,Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click">
                                                <b:ChangePropertyAction TargetName="summary" PropertyName="Tag" Value="HideIfPossible" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="backFromNamingButton"
                                    ContentTemplate="{StaticResource ControllerButtonHint}" 
                                    Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
                                    BoundEvent="UICancel" 
                                    Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
                                    Margin="50,0,0,0">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click">
                                                <b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
                                                <ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=gamePlayPage}"/>

                                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>

                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                </StackPanel>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Note: Can't use "CanEditName" as it changes for daisy and during finish state. Origins should have a "IsLockedName" property-->
                                <DataTrigger Binding="{Binding Path=SelectedOrigin.IsLockedAppearance}" Value="True">
                                    <Setter TargetName="characterName" Property="Text" Value="{Binding SelectedOrigin.Name, Mode=OneWay}"/>
                                    <Setter TargetName="CharacterNameHeader" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=hfaa5d318g5f40g47eegac3bga7134a42232f, Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Layout}" Value="Common">
                                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
                                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="summary" Property="Tag" Value=""/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
                                    <Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="summary" Property="Tag" Value=""/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsCharacterCompleteExceptName}" Value="False">
                                    <Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
                                    <Setter TargetName="MissingRequirementsError" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Validity.Name}" Value="False">
                                    <Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Validity.SameOriginSelectedByMultiplePlayers}" Value="False">
                                    <Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <Control x:Name="daisyPage" Visibility="Collapsed">
                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Grid>
                                <Grid.Resources>
                                    <!-- Replacements for Avatar Appearance Templates -->
                                    <ControlTemplate x:Key="StandardBottomButtonsTemplate2">
                                        <ls:LSButton x:Name="backFromDaisyButton"
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
                                        BoundEvent="UICancel" 
                                        Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
                                        Margin="50,0,0,0">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click">
                                                    <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
                                                    <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                        </ls:LSButton>
                                    </ControlTemplate>

                                    <ControlTemplate x:Key="AppearanceItemSelectableBottomButtons">
                                        <StackPanel Orientation="Horizontal">

                                            <ls:LSButton x:Name="selectButton" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=hd0c08193ga7f2g4a7eg8225g63748c7b3096,Converter={StaticResource TranslatedStringConverter}}" Margin="50,0,0,0">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="LSInputBindingPressed" >
                                                        <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ls:LSButton>

                                            <ls:LSButton x:Name="backFromDaisyButton"
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
                                        BoundEvent="UICancel" 
                                        Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
                                        Margin="50,0,0,0">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="Click">
                                                        <b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
                                                        <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ls:LSButton>
                                        </StackPanel>
                                    </ControlTemplate>
                                    <BitmapImage x:Key="daisyBackdrop" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/c_titleBG_guardian.png"/>
                                </Grid.Resources>

                                <b:Interaction.Triggers>
                                    <b:DataTrigger Binding="{Binding ElementName=daisyPage, Path=Visibility}" Value="Visible">
                                        <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Companion"/>
                                    </b:DataTrigger>
                                </b:Interaction.Triggers>

                                <Control x:Name="setCameras" Template="{StaticResource setDaisyCamera_Splitscreen}"/>
                                <Control Template="{StaticResource AppearanceBackgroundTemplate}"/>
                                <Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>

                                <ls:LSNineSliceImage x:Name="daisyHeader" Slices="240,130,820,130" MinWidth="800" MinHeight="264" ImageSource="{StaticResource daisyBackdrop}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="176,146,0,0" Padding="40 20 100 0">
                                    <TextBlock x:Name="pageTitle" ls:TextBlockFormatter.SourceText="{Binding Source=h0606bec2g5227g499ag8f4bg9ab2589ccded, Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledTitleFontSize}" Foreground="{StaticResource LS_extraspecialTxtColor}" TextWrapping="Wrap" VerticalAlignment="Top" Margin="40 20 40 20" MaxWidth="700"/>
                                </ls:LSNineSliceImage>

                                <Control x:Name="appearancePanel" Template="{StaticResource AppearancePanelTemplate}" Height="1700" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,250,50,0"/>

                                <ContentControl Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,128">

                                    <ls:LSButton x:Name="VentureForthButton" Style="{StaticResource ControllerHoldButtonStyle}" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}" Tag="{Binding Source='h06b74424gf3bdg4b6cgbe63g84b32198e162', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding DataContext.FinishCreating, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_VentureForth">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click">
                                                <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
                                            </b:EventTrigger>
                                            <b:EventTrigger EventName="LSButtonReleased">
                                                <ls:LSPlaySound Sound="UI_HUD_CC_VentureForth_Controller_Release"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                </ContentControl>

                                <!-- Daisy Page Bottom Buttons -->
                                <StackPanel  Style="{StaticResource ButtonHint.Container.Right}">
                                    <Control x:Name="bottomButtons"/>
                                </StackPanel>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Layout}" Value="Common">
                                    <Setter TargetName="setCameras" Property="Template" Value="{StaticResource setDaisyCamera}"/>
                                    <Setter TargetName="appearancePanel" Property="Margin" Value="0,250,200,0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Controller">
                                    <Setter TargetName="pageTitle" Property="FontSize" Value="{StaticResource ScaledTitleFontSize}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Layout}" Value="Left">
                                    <Setter TargetName="pageTitle" Property="Style" Value="{StaticResource CCBaseText}"/>
                                    <Setter TargetName="daisyHeader" Property="Margin" Value="60 60 0 0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Layout}" Value="Right">
                                    <Setter TargetName="pageTitle" Property="Style" Value="{StaticResource CCBaseText}"/>
                                    <Setter TargetName="daisyHeader" Property="Margin" Value="60 60 0 0"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <Control x:Name="readyInfoPage" Visibility="Collapsed">
                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Grid>
                                <b:Interaction.Triggers>
                                    <b:PropertyChangedTrigger Binding="{Binding Layout}">
                                        <b:Interaction.Behaviors>
                                            <b:ConditionBehavior>
                                                <b:ConditionalExpression>
                                                    <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="Equal" RightOperand="Common"/>
                                                    <b:ComparisonCondition LeftOperand="{Binding CharacterCreationStep}" Operator="Equal" RightOperand="Finish"/>
                                                    <b:ComparisonCondition LeftOperand="{Binding Data.Players.Count}" Operator="Equal" RightOperand="1"/>
                                                </b:ConditionalExpression>
                                            </b:ConditionBehavior>
                                        </b:Interaction.Behaviors>
                                        <!--Second player in splitscreen disconnects while first player ready-->
                                        <b:InvokeCommandAction Command="{Binding CancelReady}"  CommandParameter="Companion"/>
                                        <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
                                    </b:PropertyChangedTrigger>

                                    <b:DataTrigger Binding="{Binding ElementName=readyInfoPage, Path=Visibility}" Value="Visible">
                                        <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                                        <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                            <b:InvokeCommandAction.CommandParameter>
                                                <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                                    <Binding>
                                                        <Binding.Source>
                                                            <System:Single>-6.0</System:Single>
                                                        </Binding.Source>
                                                    </Binding>
                                                    <Binding>
                                                        <Binding.Source>
                                                            <System:Single>-2.2</System:Single>
                                                        </Binding.Source>
                                                    </Binding>
                                                    <Binding>
                                                        <Binding.Source>
                                                            <System:Single>-2.2</System:Single>
                                                        </Binding.Source>
                                                    </Binding>
                                                </MultiBinding>
                                            </b:InvokeCommandAction.CommandParameter>
                                        </b:InvokeCommandAction>
                                    </b:DataTrigger>
                                </b:Interaction.Triggers>

                                <Rectangle x:Name="upperShading" Height="200" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="{StaticResource transparentBlack}" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                
                                <Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>

                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hd0893eb3gec78g4c1ag8c10gf4860d887ff9, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Top" Margin="0,50,0,0"/>

                                <!-- Waiting for other Players... -->
                                <TextBlock x:Name="waitingMessage" Visibility="Collapsed" ls:TextBlockFormatter.SourceText="{Binding Source=he3eaec5bg75f0g4856g9b67g8cabfb128f56, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Bottom" Margin="0,0,0,50"/>

                                <ContentControl x:Name="cancelButton" Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,150">
                                    <ls:LSButton
                                        Command="{Binding CancelReady}"
                                        CommandParameter="Companion"
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
                                        BoundEvent="UICancel" 
                                        Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click" >
                                                <b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>
                                </ContentControl>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Layout}" Value="Common">
                                    <Setter TargetName="waitingMessage" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <Control x:Name="PlayerSlots" Template="{StaticResource PlayerSlotsTemplate}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="{StaticResource ButtonHint.Margin.Left}"/>

                <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}" EatInput="False"/>

            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right">
                    <Setter TargetName="PlayerSlots" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>