<ls:UIWidget x:Name="CharacterCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterCreation"
    ls:TooltipExtender.Owner="{Binding DummyCharacter}"
    d:DataContext="{d:DesignInstance {x:Type ls:DCCharacterCreation}, IsDesignTimeCreatable=True}">

    <ls:UIWidget.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CCLib_k.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Message box to ensure user wants to activate tutorials -->
            <ls:LSMessageBoxData x:Key="MessageBoxTutorialsCheck"
                                 Text="{Binding Source='h86f06e64g4588g4798gb828gf6e0268122af', Converter={StaticResource TranslatedStringConverter}}"
                                 Title="{Binding Source='h402bb6d3gff93g4f4fga983g36460a611cab', Converter={StaticResource TranslatedStringConverter}}"
                                 UUID="UUIDTutorialsCheck" CheckBox="True" CheckBoxValue="True" CheckBoxLabel="{Binding Source='h4506643cg668fg49ecgb9f8g09d96745e1a8', Converter={StaticResource TranslatedStringConverter}}">
                <ls:LSMessageBoxData.Actions>
                    <ls:LSGameCommandData ActionName="{Binding Source='h31d65d36gfe5fg4f9bg9184g9f8ceee5f3ed', Converter={StaticResource TranslatedStringConverter}}"
                                          Command="{Binding DataContext.CheckShowTutorialsQuestion, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                          ControlTemplate="{StaticResource BlueButton}"
                                          BoundEvent="UIAccept"/>
                </ls:LSMessageBoxData.Actions>
            </ls:LSMessageBoxData>

            <BitmapImage x:Key="swatchColourBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/overPane_appearance.png" />

            <ControlTemplate x:Key="appearancePageTemplate" TargetType="Control">
                <ControlTemplate.Resources>
                    <Storyboard x:Key="TransitionToOff">
                        <DoubleAnimation Storyboard.TargetName="appearanceRightSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="1700" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                        <DoubleAnimation Storyboard.TargetName="appearanceButtons" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="appearanceRightSidePanels" Storyboard.TargetProperty="Visibility" >
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="TransitionToOn">
                        <DoubleAnimation Storyboard.TargetName="appearanceRightSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                        <DoubleAnimation Storyboard.TargetName="appearanceButtons" Storyboard.TargetProperty="Opacity" To="1" BeginTime="0:0:0.5" Duration="0:0:0.1"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="appearanceRightSidePanels" Storyboard.TargetProperty="Visibility" >
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <BitmapImage x:Key="headerBackdrop" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/titleBG_guardian.png"/>
                </ControlTemplate.Resources>
                <Grid>

                    <ls:LSNineSliceImage x:Name="companionHeader" Slices="240,130,560,130" MinWidth="1060" MinHeight="272" Visibility="Collapsed" ImageSource="{StaticResource headerBackdrop}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="176,146,0,0" Padding="0 80 40 0">
                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h0606bec2g5227g499ag8f4bg9ab2589ccded', Converter={StaticResource TranslatedStringConverter}}" MaxWidth="700" TextWrapping="Wrap" FontSize="{StaticResource ScaledBigFontSize}" Foreground="{StaticResource LS_tint100}"/>
                    </ls:LSNineSliceImage>

                    <Grid x:Name="appearanceRightSidePanels" HorizontalAlignment="Right">
                        <Grid.RenderTransform>
                            <TranslateTransform/>
                        </Grid.RenderTransform>

                        <Grid HorizontalAlignment="Right" Width="1372">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/vignette_left.png" Stretch="Fill">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="-1" CenterX="686"/>
                                </Image.RenderTransform>
                            </Image>
                        </Grid>

                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,58,0,0">
                            
                            <Grid Margin="-76,0">

                                <Image x:Name="bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/appearanceOptionsPane.png" Stretch="None" />

                                <Control x:Name="appearancePanel"/>

                            </Grid>

                            <ListBox x:Name="appearanceTabs" HorizontalAlignment="Right" Margin="0,300,8,0">

                                <b:Interaction.Triggers>
                                    <b:DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.IsVisible}" Value="False">
                                        <b:ChangePropertyAction TargetName="appearanceTabs" PropertyName="SelectedItem" Value="{Binding ElementName=generalTab}"/>
                                    </b:DataTrigger>
                                </b:Interaction.Triggers>

                                <ListBox.Resources>
                                    <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race.png"/>
                                    <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race_h.png"/>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">

                                                    <Grid Margin="0,0,0,12" MinWidth="276" MaxWidth="400">

                                                        <Grid HorizontalAlignment="Right" VerticalAlignment="Center">
                                                            <Image x:Name="ring" Source="{StaticResource TabBackground_d}" Stretch="None"/>
                                                            <Image x:Name="icon" Source="{DynamicResource tabIcon}" Stretch="None"/>
                                                        </Grid>

                                                        <TextBlock x:Name="label" 
                                                               Foreground="{StaticResource CCTextNormal}"
                                                               TextAlignment="Right" TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                                               HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,92,0"/>

                                                        <b:Interaction.Triggers>
                                                            <b:EventTrigger EventName="MouseLeftButtonUp">
                                                                <ls:LSPlaySound Sound="UI_Shared_Click"/>
                                                            </b:EventTrigger>
                                                            <b:EventTrigger EventName="MouseLeftButtonDown">
                                                                <ls:LSPlaySound Sound="UI_Shared_Press"/>
                                                            </b:EventTrigger>
                                                            <b:EventTrigger EventName="MouseEnter">
                                                                <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                                                            </b:EventTrigger>
                                                        </b:Interaction.Triggers>

                                                    </Grid>

                                                    <ControlTemplate.Triggers>

                                                        <Trigger Property="Tag" Value="race">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hadf27237ge191g4922ga84cg055b984c9b1f', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="subrace">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf4977710g272bg4334g84aegf749a3b18205', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="general">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h255e892egec87g4160gb9fag20d69d7c9d30', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="tattooandpiercing">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hff534bd5g26b4g44dbg877bg9ca6abd65969', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="eyes">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9b52cf91g3b11g428ag9d17g3a724339b3cd', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="makeup">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbbddf3e9g352fg461fg8761gbb5256ebd9c4', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="hair">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h6c6fae77g40f8g4c82gaabfg69655aae2293', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="facialhair">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5060d1edg2799g4388g9203gc42e380c68f8', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="horns">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1e2fea14g1a4fg4567ga286g8c4162b78d6e_14', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="draconic">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0e1fded7g681ag4e5fgb0a2gc5928ab399a1', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Tag" Value="tail">
                                                            <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h11908357gafefg4f3dg92feg11588e5e123e', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </Trigger>

                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="icon" Property="Source" Value="{DynamicResource tabIconHover}"/>
                                                            <Setter TargetName="ring" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/tab_inactive_h.png"/>
                                                            <Setter TargetName="label" Property="Foreground" Value="White"/>
                                                        </Trigger>

                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="label" Property="Foreground" Value="White"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="ring" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/tab_inactive_disabled.png"/>
                                                            <Setter TargetName="label" Property="Foreground" Value="Gray"/>
                                                        </Trigger>

                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBoxItem x:Name="raceTab" Tag="race" Visibility="Collapsed"/>
                                <ListBoxItem x:Name="subRaceTab" Tag="subrace" Visibility="Collapsed"/>

                                <ListBoxItem x:Name="generalTab" Tag="general" IsSelected="True"/>
                                <ListBoxItem x:Name="tattooAndPiercingTab" Tag="tattooandpiercing" Visibility="{Binding SelectedOrigin.IsLockedAppearance, Converter={StaticResource BoolToCollapsedConverter}}"/>
                                <ListBoxItem x:Name="eyesTab" Tag="eyes" Visibility="{Binding SelectedOrigin.IsLockedAppearance, Converter={StaticResource BoolToCollapsedConverter}}"/>
                                <ListBoxItem x:Name="makeupTab" Tag="makeup" Visibility="{Binding SelectedOrigin.IsLockedAppearance, Converter={StaticResource BoolToCollapsedConverter}}"/>
                                <ListBoxItem x:Name="hairTab" Tag="hair" Visibility="{Binding SelectableHair.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                                <ListBoxItem x:Name="facialHairTab" Tag="facialhair" Visibility="{Binding SelectableBeards.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                                <ListBoxItem x:Name="hornsTab" Tag="horns" Visibility="{Binding SelectableHorns.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                                <ListBoxItem x:Name="draconicTab" Tag="draconic" Visibility="{Binding Path=SelectedSubClass.IsDraconicSorcerer, Converter={StaticResource BoolToVisibleConverter}, FallbackValue=Collapsed}"/>
                                <ListBoxItem x:Name="tailTab" Tag="tail" Visibility="{Binding Path=SelectableTail.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                            </ListBox>
                        </StackPanel>

                        <!-- Appearance Buttons on Appearance Page -->
                        <Control x:Name="appearanceButtons" Template="{StaticResource AppearanceButtonsTemplate}" Margin="0,0,492,64" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>

                        

                    </Grid>

                    <b:Interaction.Triggers>
                        <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Gameplay">
                            <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Origin"/>
                            <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                        </b:DataTrigger>

                        <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Appearance">
                            <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Appearance"/>
                            <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOn}" ControlStoryboardOption="Play"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>3.8</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>4</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>4.2</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:DataTrigger>

                        <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Companion">
                            <b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Companion"/>
                            <b:ChangePropertyAction TargetName="appearanceTabs" PropertyName="SelectedItem" Value="{Binding ElementName=raceTab}"/>
                            <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOn}" ControlStoryboardOption="Play"/>
                            <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                <b:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>0</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>0</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding>
                                            <Binding.Source>
                                                <System:Single>0</System:Single>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </b:InvokeCommandAction.CommandParameter>
                            </b:InvokeCommandAction>
                        </b:DataTrigger>

                        <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Naming">
                            <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                        </b:DataTrigger>
                        
                        <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Finished">
                            <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                        </b:DataTrigger>

                    </b:Interaction.Triggers>

                </Grid>
                <ControlTemplate.Triggers>

                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                        <Setter TargetName="companionHeader" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="raceTab" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="appearanceButtons" Property="Template" Value="{StaticResource AppearanceButtonsTemplate}"/>
                    </DataTrigger> 
                    
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Appearance">
                        <Setter TargetName="appearanceButtons" Property="Template" Value="{StaticResource AppearanceButtonsTemplateRandomOnly}"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding CharacterCreationStep}" Value="Companion"/>
                            <Condition Binding="{Binding SelectableSubRaces.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="subRaceTab" Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="race">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6020727bge0e3g4de7gaf3ag469c3b32b3d2', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                        <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}" ItemContainerStyle="{StaticResource CCIconTextListBoxItemStyle}" Style="{StaticResource gameplayIconGridStyle}">
                                            <ListBox.Resources>
                                                <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                            </ListBox.Resources>
                                        </ListBox>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedRace.Name}" Style="{StaticResource PanelHeaderText}" TextAlignment="Center" Margin="0,50,0,0"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding InfoRaceDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,10,0,0"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="subrace">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h29d1d637g94bbg4f11g9bdfgbe0042b60e40', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                        <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}" ItemContainerStyle="{StaticResource CCIconTextListBoxItemStyle}" Style="{StaticResource gameplayIconGridStyle}">
                                            <ListBox.Resources>
                                                <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                            </ListBox.Resources>
                                        </ListBox>

                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedSubRace.Name}" Style="{StaticResource PanelHeaderText}" TextAlignment="Center" Margin="0,50,0,0"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Race.Description}" Style="{StaticResource PanelDescriptionText}" Margin="0,10,0,0"/>

                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="general">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid>
                                        <StackPanel x:Name="basePanel">

                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Unloaded">
                                                    <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{StaticResource TrueValue}"/>
                                                    <b:ChangePropertyAction TargetName="displayGenitalsToggle" PropertyName="IsChecked" Value="False" />
                                                </b:EventTrigger>
                                                <b:PropertyChangedTrigger Binding="{Binding ElementName=flowPage, Path=SelectedIndex}">
                                                    <b:InvokeCommandAction Command="{Binding DisplayEquipment}" CommandParameter="{StaticResource TrueValue}"/>
                                                    <b:ChangePropertyAction TargetName="displayGenitalsToggle" PropertyName="IsChecked" Value="False" />
                                                </b:PropertyChangedTrigger>
                                            </b:Interaction.Triggers>

                                            <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3003476bg9facg4159g87e1gd9f70aee88eb', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                            <ls:LSScrollViewer x:Name="scrollSection" Template="{StaticResource NoForcedStyleScrollViewerTemplate}" VerticalScrollBarVisibility="Auto" Height="1436" HorizontalAlignment="Right" Margin="0,0,112,0">
                                                <ls:LSScrollViewer.Resources>
                                                    <GridLength x:Key="Top">20</GridLength>
                                                    <GridLength x:Key="Bottom">80</GridLength>
                                                </ls:LSScrollViewer.Resources>

                                                <StackPanel Width="1000" HorizontalAlignment="Left" Margin="0,0,0,50">

                                                    <Control x:Name="bodyTypeSelector"  Template="{StaticResource BodyTypeTemplate}" Margin="0,64,0,0"/>

                                                    <ContentControl x:Name="identityHeader"  Template="{StaticResource decoratedHeader}" Margin="0,50,0,0" Visibility="{Binding CanShowIdentity, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hcc23cfaagbc1eg4bb0gafb9g9f720497b786', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>

                                                    <Grid x:Name="IdentityContainer" HorizontalAlignment="Center" Margin="0,20,0,0" Visibility="{Binding CanShowIdentity, Converter={StaticResource BoolToVisibleConverter}}">
                                                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/dropdownBox_d.png" Stretch="None"/>
                                                        <ls:LSButton Template="{StaticResource CarouselButtonTemplate}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-40,0,0,0"
                                                                 IsEnabled="{Binding CanEditIdentity}"
                                                                 Command="{Binding DataContext.SelectPreviousIdentity, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                                 CommandParameter="{Binding}" SoundID="UI_HUD_CC_Gender"/>
                                                        <ls:LSButton Template="{StaticResource CarouselButtonTemplate}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-40,0"
                                                                 IsEnabled="{Binding CanEditIdentity}"
                                                                 Command="{Binding DataContext.SelectNextIdentity, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                                 CommandParameter="{Binding}" SoundID="UI_HUD_CC_Gender">
                                                            <ls:LSButton.RenderTransform>
                                                                <ScaleTransform ScaleX="-1" CenterX="80"/>
                                                            </ls:LSButton.RenderTransform>
                                                        </ls:LSButton>

                                                        <TextBlock x:Name="IdentityTxt" Text="{Binding Source='h033a526fg0fe7g4164g8431g177be16d148a', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource CarouselTextStyle}" TextTrimming="CharacterEllipsis" MaxWidth="500"/>
                                                    </Grid>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h81102ec7gef4dg42edg85b5g60d7fb1d13f9', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ListBox Style="{StaticResource CCCarouselStyle}" DataContext="{Binding Voices}"/>

                                                    <ls:LSButton Template="{StaticResource FramedIconWithTextButtonTemplate}" Content="{Binding Source='hbf7b56f9g7cd9g4b08g9986ge231edbbde18', Converter={StaticResource TranslatedStringConverter}}" Tag="TextOnRight" Command="{Binding PlayVoice}" SoundID="UI_HUD_CC_ListenVoice" HorizontalAlignment="Center" Margin="0,20,0,0">
                                                        <ls:LSButton.Resources>
                                                            <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_d.png"/>
                                                            <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_h.png"/>
                                                            <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_p.png"/>
                                                            <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_disabled.png"/>
                                                            <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                            <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_h.png"/>
                                                            <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                            <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                        </ls:LSButton.Resources>
                                                    </ls:LSButton>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0" Visibility="{Binding SelectableHeads.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3eee9b8dgc315g4cb8g90a3g50cea8a27c69', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ListBox ItemsSource="{Binding SelectableHeads}" SelectedItem="{Binding SelectedHead}" Style="{StaticResource headAppearanceIconGridStyle}" Visibility="{Binding SelectableHeads.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0" Visibility="{Binding SelectableTopOfHead.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8949ad0egb0f8g4ea8gbf56g25a764a8bb34', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ListBox ItemsSource="{Binding SelectableTopOfHead}" SelectedItem="{Binding SelectedTopOfHead}" Style="{StaticResource headAppearanceIconGridStyle}" Visibility="{Binding SelectableTopOfHead.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0" Visibility="{Binding SelectableChin.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h44344a58g63ccg44b2gb878gc5d3cdb31b17', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ListBox ItemsSource="{Binding SelectableChin}" SelectedItem="{Binding SelectedChin}" Style="{StaticResource headAppearanceIconGridStyle}" Visibility="{Binding SelectableChin.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0" Visibility="{Binding SelectableJaw.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hdff3076bg631ag4c0egadbdgbf4a6f9d777e', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ListBox ItemsSource="{Binding SelectableJaw}" SelectedItem="{Binding SelectedJaw}" Style="{StaticResource headAppearanceIconGridStyle}" Visibility="{Binding SelectableJaw.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,0,0,50"/>

                                                    <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,64,0,0">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hc81ba7bcgb2ccg4423ga050g253fd53ce2c9', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ls:LSToggleButton x:Name="swatchSkinColourButton" DataContext="{Binding SelectedSkinColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                    <StackPanel x:Name="scars" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                                                        <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h408d8f2bgca7eg4d20gb0bag4d4a3318f1c5', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ContentControl>
                                                        <ListBox ItemsSource="{Binding SelectableScars}" SelectedItem="{Binding SelectedScar}" Style="{StaticResource headAppearanceIconGridStyle}"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="Age" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                                                        <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hfcbe9131g86b0g46d7ga4afg5c3301c070bf', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ContentControl>
                                                        <Slider DataContext="{Binding ApperanceScalarAge}"
                                                            Template="{StaticResource OptionsSliderTemplate}"
                                                            Value="{Binding Value}"
                                                            Minimum="{Binding Min}"
                                                            Maximum="{Binding Max}"
                                                            IsSnapToTickEnabled="False"
                                                            SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                                            LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                                            IsEnabled="{Binding Enabled}"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="Freckles" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                                                        <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6a8fb398g7b1ag443egb45eg53c46ebbe9a3', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ContentControl>
                                                        <Slider DataContext="{Binding ApperanceScalarFreckles}"
                                                            Template="{StaticResource OptionsSliderTemplate}"
                                                            Value="{Binding Value}"
                                                            Minimum="{Binding Min}"
                                                            Maximum="{Binding Max}"
                                                            IsSnapToTickEnabled="False"
                                                            SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                                            LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                                            IsEnabled="{Binding Enabled}"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="FrecklesIntensity" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                                                        <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h63c9cb05g65f3g439dgb85bg9eb69a2cc894', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ContentControl>
                                                        <Slider DataContext="{Binding ApperanceScalarFrecklesIntensity}"
                                                            Template="{StaticResource OptionsSliderTemplate}"
                                                            Value="{Binding Value}"
                                                            Minimum="{Binding Min}"
                                                            Maximum="{Binding Max}"
                                                            IsSnapToTickEnabled="False"
                                                            SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                                            LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                                            IsEnabled="{Binding Enabled}"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="Vitiligo" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}">
                                                        <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8f8d1cc6g57adg486agbb58gcba376102c37', Converter={StaticResource TranslatedStringConverter}}"/>
                                                        </ContentControl>
                                                        <Slider DataContext="{Binding ApperanceScalarVitiligo}"
                                                        Template="{StaticResource OptionsSliderTemplate}"
                                                        Value="{Binding Value}"
                                                        Minimum="{Binding Min}"
                                                        Maximum="{Binding Max}"
                                                        IsSnapToTickEnabled="False"
                                                        SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                                        LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                                        IsEnabled="{Binding Enabled}"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="genitalsPanel" Visibility="Collapsed" Margin="0,50,0,0">

                                                        <ContentControl Template="{StaticResource decoratedHeader}">
                                                            <TextBlock Text="{Binding Source='h72410e08g770dg48c8g98e8g5a5a933a2254', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelSubHeaderText}"/>
                                                        </ContentControl>

                                                        <ListBox Template="{DynamicResource SelectableCarouselTemplate}" ItemsSource="{Binding SelectableGenitals}" SelectedItem="{Binding SelectedGenitals}" Margin="0,20,0,0"/>

                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                                                            <ls:LSToggleButton x:Name="displayGenitalsToggle" Style="{StaticResource TickBox}" IsChecked="False" Command="{Binding DisplayEquipment}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource InvertBoolConverter}}">
                                                                <b:Interaction.Triggers>
                                                                    <b:EventTrigger EventName="Click" >
                                                                        <b:Interaction.Behaviors>
                                                                            <b:ConditionBehavior>
                                                                                <b:ConditionalExpression>
                                                                                    <b:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=displayGenitalsToggle}" Operator="Equal" RightOperand="{StaticResource TrueValue}"/>
                                                                                </b:ConditionalExpression>
                                                                            </b:ConditionBehavior>
                                                                        </b:Interaction.Behaviors>
                                                                        <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                                                                    </b:EventTrigger>
                                                                </b:Interaction.Triggers>
                                                            </ls:LSToggleButton>
                                                            <TextBlock Text="{Binding Source='h5d70015agdbd9g45c9g9270g7ee6876b5b9a', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center"/>
                                                        </StackPanel>

                                                    </StackPanel>

                                                </StackPanel>
                                            </ls:LSScrollViewer>
                                        </StackPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchSkinColourButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hc81ba7bcgb2ccg4423ga050g253fd53ce2c9', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding SkinColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableSkinColours}" SelectedItem="{Binding SelectedSkinColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchSkinColourButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchSkinColourButton}" Value="True">
                                            <Setter TargetName="scrollSection" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>                                        
                                        <DataTrigger Binding="{Binding SelectedIdentity}" Value="Male">
                                            <Setter TargetName="IdentityTxt" Property="Text" Value="{Binding Source='hf12d3837gd6fbg448ag813dg9cf6d9a4d412', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIdentity}" Value="Female">
                                            <Setter TargetName="IdentityTxt" Property="Text" Value="{Binding Source='h5d60ad1cg41dcg4d9fgaba8gda842c090327', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIdentity}" Value="Neutral">
                                            <Setter TargetName="IdentityTxt" Property="Text" Value="{Binding Source='hea2ce077g2b7ag42dfgb194g928c3dd108a7', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding SelectableGenitals.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                            <Setter TargetName="genitalsPanel" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CoverNudity}" Value="True">
                                            <Setter TargetName="genitalsPanel" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                            <!-- Don't show genitals options for Companion -->
                                            <Setter TargetName="genitalsPanel" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="bodyTypeSelector" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="identityHeader" Property="Margin" Value="0,64,0,0"/>
                                        </DataTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="tattooandpiercing">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid VerticalAlignment="Top" Height="1560">
                                        <DockPanel x:Name="basePanel" VerticalAlignment="Top">
                                            
                                            <StackPanel x:Name="PanelHeader"  DockPanel.Dock="Top" VerticalAlignment="Top">
                                                <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hff534bd5g26b4g44dbg877bg9ca6abd65969', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                            </StackPanel>

                                            <StackPanel DockPanel.Dock="Bottom" x:Name="piercings" Visibility="{Binding Path=SelectablePiercings.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h57dba953g6fd2g4a66g8155gc527b809a882', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ListBox Template="{DynamicResource SelectableCarouselTemplate}" ItemsSource="{Binding SelectablePiercings}" SelectedItem="{Binding SelectedPiercing}"/>
                                            </StackPanel>

                                            <DockPanel x:Name="tattoos" Visibility="{Binding IsDragonborn, Converter={StaticResource BoolToCollapsedConverter}}" >
                                                <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3f96b6b8gd682g4b90ga8fdge34ccb965bbd', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>

                                                <StackPanel DockPanel.Dock="Bottom" x:Name="colorSwatches">
                                                    <ContentControl x:Name="swatchTattooColorHeader" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h0c6d2890g6a16g4e20ga2a1gcb15afa6e8d3', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </ContentControl>
                                                    <ls:LSToggleButton x:Name="swatchTattooColorButton" DataContext="{Binding SelectedTattooColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                                </StackPanel>

                                                <ListBox ItemsSource="{Binding SelectableTattoos}" SelectedItem="{Binding SelectedTattoo}" Style="{StaticResource appearanceIconGridStyle}"/>

                                            </DockPanel>

                                        </DockPanel>

                                        <Grid x:Name="TattooColorPicker" Visibility="{Binding Path=IsChecked, ElementName=swatchTattooColorButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h0c6d2890g6a16g4e20ga2a1gcb15afa6e8d3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceTattoos.ColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableTattooColours}" SelectedItem="{Binding SelectedTattooColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchTattooColorButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceTattoos.EmptyMaterialSelected}" Value="True">
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchTattooColorButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="piercings" Property="Visibility" Value="Hidden"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="eyes">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid>
                                        <StackPanel x:Name="basePanel">
                                            <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h9b52cf91g3b11g428ag9d17g3a724339b3cd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                            <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ContentControl>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,16,0,0">
                                                <StackPanel.ToolTip>
                                                    <ls:LSTooltip>
                                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h52617c33g962bg4bddg9493gb00e40c28fb0', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                    </ls:LSTooltip>
                                                </StackPanel.ToolTip>
                                                <ls:LSToggleButton x:Name="heteroChromiaToggle" Style="{StaticResource TickBox}" IsChecked="{Binding HeterochromiaEnabled, Mode=TwoWay}">
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Click" >
                                                            <b:Interaction.Behaviors>
                                                                <b:ConditionBehavior>
                                                                    <b:ConditionalExpression>
                                                                        <b:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=heteroChromiaToggle}" Operator="Equal" RightOperand="{StaticResource FalseValue}"/>
                                                                    </b:ConditionalExpression>
                                                                </b:ConditionBehavior>
                                                            </b:Interaction.Behaviors>
                                                            <b:InvokeCommandAction Command="{Binding DisableHeterochromia}"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>
                                                </ls:LSToggleButton>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6f4a0631g9994g44ffg9468gaec6c6a62838', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center"/>
                                            </StackPanel>

                                            <StackPanel Visibility="{Binding HeterochromiaEnabled, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='True'}">
                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,20,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hc6bfd120gde63g4c3ag99eag43e8f905a7d4', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                            </StackPanel>

                                            <ls:LSToggleButton x:Name="swatchEyeColourButton" DataContext="{Binding SelectedEyeColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                            <StackPanel Visibility="{Binding HeterochromiaEnabled, Converter={StaticResource BoolToVisibleConverter}}">
                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,20,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7d84f886g75e1g46begb5adg922b4238c617', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>

                                                <ls:LSToggleButton x:Name="swatchHeterochromiaEyeColourButton" DataContext="{Binding SelectedHeterochromiaEyeColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                            </StackPanel>
                                        </StackPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchEyeColourButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding EyeColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedEyeColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchEyeColourButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHeterochromiaEyeColourButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding EyeColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableEyeColours}" SelectedItem="{Binding SelectedHeterochromiaEyeColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHeterochromiaEyeColourButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchEyeColourButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHeterochromiaEyeColourButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="makeup">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid VerticalAlignment="Top" Height="1560">
                                        <DockPanel x:Name="basePanel" VerticalAlignment="Top">
                                            <StackPanel DockPanel.Dock="Top">
                                                <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbbddf3e9g352fg461fg8761gbb5256ebd9c4', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                            </StackPanel>

                                            <StackPanel DockPanel.Dock="Bottom" x:Name="colorSwatches">
                                                <ContentControl x:Name="swatchMakeupColorHeader" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hd98545bbg8f42g437dg8f70gcb5f7a1bda8b', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchMakeupColorButton" DataContext="{Binding SelectedMakeupColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                <ContentControl x:Name="swatchLipsMakeupColorHeader" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='ha96c9b3bg5d8dg4ebbgb7a8gbefe66c7b781', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchLipsMakeupColorButton" DataContext="{Binding SelectedLipsMakeupColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                            </StackPanel>

                                            <DockPanel>
                                                <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbd793d8fg4b19g4efdga071g112ba7af47dd', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ListBox ItemsSource="{Binding SelectableMakeup}" SelectedItem="{Binding SelectedMakeup}" Style="{StaticResource appearanceIconGridStyle}"/>
                                            </DockPanel>

                                        </DockPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchMakeupColorButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <b:Interaction.Behaviors>
                                                <ls:CollectionFilterBehavior x:Name="IsDragonbornMakeupFilter" ItemsSource="{Binding AppearanceMakeup.ColorOptions}" Predicate="{Binding IsDragonbornPredicate}"/>
                                            </b:Interaction.Behaviors>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hd98545bbg8f42g437dg8f70gcb5f7a1bda8b', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding FilteredItems, ElementName=IsDragonbornMakeupFilter}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableMakeupColours}" SelectedItem="{Binding SelectedMakeupColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchMakeupColorButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchLipsMakeupColorButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <b:Interaction.Behaviors>
                                                <ls:CollectionFilterBehavior x:Name="IsDragonbornLipsMakeupFilter" ItemsSource="{Binding AppearanceLipsMakeup.ColorOptions}" Predicate="{Binding IsDragonbornPredicate}"/>
                                            </b:Interaction.Behaviors>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='ha96c9b3bg5d8dg4ebbgb7a8gbefe66c7b781', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding FilteredItems, ElementName=IsDragonbornLipsMakeupFilter}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableLipsMakeupColours}" SelectedItem="{Binding SelectedLipsMakeupColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchLipsMakeupColorButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceMakeup.EmptyMaterialSelected}" Value="True">
                                            <Setter TargetName="swatchMakeupColorHeader" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="swatchMakeupColorButton" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchMakeupColorButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchLipsMakeupColorButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="hair">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid VerticalAlignment="Top" Height="1560">
                                        <DockPanel x:Name="basePanel" VerticalAlignment="Top">
                                            <StackPanel DockPanel.Dock="Top">
                                                <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6c6fae77g40f8g4c82gaabfg69655aae2293', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                            </StackPanel>


                                            <StackPanel DockPanel.Dock="Bottom" x:Name="colorSwatches" Visibility="{Binding SelectedHair.IsNull, Converter={StaticResource BoolToCollapsedConverter}}">

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchHairButton" DataContext="{Binding SelectedHairColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h9d4a4e08g81cdg4259g8bd1g80b47dbda3f3', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchHighlightsButton" DataContext="{Binding SelectedHighlightColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchGrayButton" DataContext="{Binding SelectedGrayingColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                            </StackPanel>
                                            
                                            <DockPanel>
                                                <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='haaecd709ga04eg4c33gb2a3gd5be989e5146', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ListBox ItemsSource="{Binding SelectableHair}" SelectedItem="{Binding SelectedHair}" Style="{StaticResource appearanceIconGridStyle}"/>
                                            </DockPanel>
                                        </DockPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHairButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding HairColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableHairColours}" SelectedItem="{Binding SelectedHairColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHairButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHighlightsButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h9d4a4e08g81cdg4259g8bd1g80b47dbda3f3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHairHighlights.ColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableHighlightColours}" SelectedItem="{Binding SelectedHighlightColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHighlightsButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchGrayButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHairGraying.ColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableGrayingColours}" SelectedItem="{Binding SelectedGrayingColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchGrayButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHairButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHighlightsButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchGrayButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="facialhair">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid VerticalAlignment="Top" Height="1560">
                                        <DockPanel x:Name="basePanel" VerticalAlignment="Top">
                                            <StackPanel DockPanel.Dock="Top">
                                                <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h5060d1edg2799g4388g9203gc42e380c68f8', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                            </StackPanel>

                                            <StackPanel DockPanel.Dock="Bottom" x:Name="colorSwatches" Visibility="{Binding SelectedBeard.IsNull, Converter={StaticResource BoolToCollapsedConverter}}">

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchHairButton" DataContext="{Binding SelectedHairColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchGrayButton" DataContext="{Binding SelectedGrayingColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                            </StackPanel>

                                            <DockPanel>
                                                <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='haaecd709ga04eg4c33gb2a3gd5be989e5146', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ListBox ItemsSource="{Binding SelectableBeards}" SelectedItem="{Binding SelectedBeard}" Style="{StaticResource appearanceIconGridStyle}"/>
                                            </DockPanel>

                                        </DockPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHairButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0">
                                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/overPane_appearance.png" Stretch="None"/>

                                            <StackPanel HorizontalAlignment="Center" Margin="0,64,0,0">
                                                <ContentControl Template="{StaticResource decoratedHeader}">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                                </ContentControl>
                                                <ListBox Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding HairColorOptions}" Margin="0,20,0,0"/>
                                                <ListBox ItemsSource="{Binding SelectableHairColours}" SelectedItem="{Binding SelectedHairColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="0,20,0,0"/>
                                            </StackPanel>

                                            <ls:LSToggleButton IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHairButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" VerticalAlignment="Bottom" Margin="0,0,0,-16" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchGrayButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0">
                                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/overPane_appearance.png" Stretch="None"/>

                                            <StackPanel DataContext="{Binding AppearanceHairGraying}" VerticalAlignment="Top" Margin="0,64,0,0">
                                                <ContentControl Template="{StaticResource decoratedHeader}">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hb85e6761gd73bg4fc1g8ff3g4081ff97694a', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                                </ContentControl>
                                                <ListBox Style="{DynamicResource ColorOptionsStyle}" ItemsSource="{Binding ColorOptions}" Margin="0,20,0,0"/>
                                                <ItemsControl Style="{StaticResource ColorSwatchStyle}" Margin="0,20,0,0"/>
                                            </StackPanel>

                                            <ls:LSToggleButton IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchGrayButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" VerticalAlignment="Bottom" Margin="0,0,0,-16" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHairButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchGrayButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="horns">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid VerticalAlignment="Top" Height="1560">
                                        <DockPanel x:Name="basePanel" VerticalAlignment="Top">
                                            <StackPanel DockPanel.Dock="Top">
                                                <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h1e2fea14g1a4fg4567ga286g8c4162b78d6e_14', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                            </StackPanel>

                                            <StackPanel x:Name="colorSwatches" DockPanel.Dock="Bottom">
                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8f9581e8g4440g4cf5g8752g220535346a50', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchHornColorButton" DataContext="{Binding SelectedHornColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h33ea2bd3g91cag471cg8242gef7327983dbf', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ls:LSToggleButton x:Name="swatchHornTipColorButton" DataContext="{Binding SelectedHornTipColour}" IsChecked="False" Template="{StaticResource ColourButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                            </StackPanel>

                                            <DockPanel>
                                                <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h290f2542g9702g4651g8afdgdae1f08a12eb', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ContentControl>
                                                <ListBox ItemsSource="{Binding SelectableHorns}" SelectedItem="{Binding SelectedHorn}" Style="{StaticResource appearanceIconGridStyle}"/>
                                            </DockPanel>

                                        </DockPanel>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHornColorButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8f9581e8g4440g4cf5g8752g220535346a50', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHornColor.ColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableHornColours}" SelectedItem="{Binding SelectedHornColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHornColorButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>

                                        <Grid Visibility="{Binding Path=IsChecked, ElementName=swatchHornTipColorButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0" Height="1298" Width="820">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Grid.RowSpan="4" Source="{StaticResource swatchColourBackground}" Stretch="None"/>

                                            <ContentControl Grid.Row="0" VerticalAlignment="Top" Margin="0, 64, 0, 0" Template="{StaticResource decoratedHeader}">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h33ea2bd3g91cag471cg8242gef7327983dbf', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource OverPanelHeaderText}"/>
                                            </ContentControl>

                                            <ListBox Grid.Row="1" VerticalAlignment="Top" Style="{StaticResource ColorOptionsStyle}" ItemsSource="{Binding AppearanceHornTipColor.ColorOptions}" Margin="0,20,0,0"/>

                                            <ListBox Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding SelectableHornTipColours}" SelectedItem="{Binding SelectedHornTipColour}" ItemsPanel="{StaticResource selectableColourPanel}" ItemTemplate="{StaticResource selectableColourTemplate}" Margin="10,20,10,20"/>

                                            <ls:LSToggleButton Grid.Row="3" VerticalAlignment="Bottom" IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=swatchHornTipColorButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                        </Grid>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHornColorButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=swatchHornTipColorButton}" Value="True">
                                            <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource OverlayBackgroundContentFade}"/>
                                            <Setter TargetName="colorSwatches" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="draconic">
                        <Setter TargetName="appearancePanel" Property="Template" Value="{StaticResource draconicAppearancePanelTemplate}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=appearanceTabs, Path=SelectedItem.Tag}" Value="tail">
                        <Setter TargetName="appearancePanel" Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DockPanel VerticalAlignment="Top" MaxHeight="1560">

                                        <StackPanel DockPanel.Dock="Top">
                                            <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h11908357gafefg4f3dg92feg11588e5e123e', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                        </StackPanel>

                                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hbb75a111g99e6g45afga2a6gaf73b748faa8', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </ContentControl>
                                        <ListBox ItemsSource="{Binding SelectableTail}" SelectedItem="{Binding SelectedTail}" Style="{StaticResource appearanceIconGridStyle}" Height="1300" MaxHeight="1300"/>

                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding OpenShowTutorialsQuestion}" CommandParameter="{StaticResource MessageBoxTutorialsCheck}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <b:Interaction.Behaviors>
        <ls:CollectionFilterBehavior x:Name="CustomOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsCustomOriginPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="PresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomOriginPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="ClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionSortBehavior x:Name="SortedRaceSkills" ItemsSource="{Binding AllSkills.RaceProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedClassSkills" ItemsSource="{Binding AllSkills.ClassProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedExpertiseSkills" ItemsSource="{Binding AllSkills.ExpertiseSkills.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedSummarySkills" ItemsSource="{Binding ProgressionData.AllProgressions.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedPreparableSpells" ItemsSource="{Binding SpellPrepare.Preparable}" Comparer="{Binding SpellByLevelSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedPreparableSpellGroupsByLevel" ItemsSource="{Binding SpellPrepare.PreparableByLevel}" Comparer="{Binding SpellGroupByLevelSortComparer}" />

    </b:Interaction.Behaviors>

    <Grid x:Name="widgetBase" IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBoolConverter}}">

        <!-- Flow control -->
        <ListBox x:Name="flowPage" Visibility="Hidden">

            <b:Interaction.Triggers>
                <b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                    <b:ChangePropertyAction TargetName="daisyPageTab" PropertyName="IsSelected" Value="True" />
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                    <b:ChangePropertyAction TargetName="readyInfoPageTab" PropertyName="IsSelected" Value="True" />
                    <b:ChangePropertyAction TargetName="readyInfoPage" PropertyName="Visibility" Value="Visible" />

                    <b:ChangePropertyAction TargetName="widgetBase" PropertyName="IsEnabled" Value="True" />
                </b:DataTrigger>

            </b:Interaction.Triggers>

            <ListBoxItem Content="Gameplay" IsSelected="True"/>
            <ListBoxItem Content="Appearance"/>
            <ListBoxItem x:Name="daisyPageTab" Content="Companion"/>
            <ListBoxItem Content="Naming"/>
            <ListBoxItem x:Name="readyInfoPageTab" Content="Finished"/>
        </ListBox>

        <!-- Flow Pages -->
        <Control x:Name="gamePlayPage" Visibility="Visible">
            <Control.RenderTransform>
                <!--
                -->
                <TranslateTransform/>
                <!-- This is for reloadUIs to start on Appearance page. Will be removed when CC orangebox is complete
                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=gamePlayPage, Converter={StaticResource MultiplierConverter}, ConverterParameter=-1}"/>
                -->
            </Control.RenderTransform>

            <Control.Template>
                <ControlTemplate TargetType="Control">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="TransitionToOff">
                            <DoubleAnimation Storyboard.TargetName="gamePlayLeftSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="-1700" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="gamePlayLeftSidePanels">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="TransitionToOn">
                            <DoubleAnimation Storyboard.TargetName="gamePlayLeftSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="gamePlayLeftSidePanels">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Gameplay">
                                <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-13.5</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-5.5</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-4.5</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOn}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding SelectedClass.ClassIdentifier, FallbackValue='',Converter={StaticResource CompareStringConverter}, ConverterParameter='Bard'}" Value="True">
                                <ls:LSPlaySound Sound="Music_Bard_Screen_On"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding SelectedClass.ClassIdentifier, FallbackValue='',Converter={StaticResource CompareStringConverter}, ConverterParameter='Bard'}" Value="False">
                                <ls:LSPlaySound Sound="Music_Bard_Screen_Off"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Appearance">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger> 
                            
                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Naming">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>

                             <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Companion">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>
                            
                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Finished">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>
                            
                        </b:Interaction.Triggers>


                        <Grid x:Name="gamePlayLeftSidePanels" HorizontalAlignment="Left">
                            <Grid.RenderTransform>
                                <TranslateTransform/>
                            </Grid.RenderTransform>

                            <Grid.Background>
                                <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/vignette_left.png"/>
                            </Grid.Background>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,62,0,0">
                                <Grid>

                                    <Image x:Name="bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/contentPane.png" Stretch="None" HorizontalAlignment="Left"/>

                                    <ContentControl x:Name="gameplaySubPanel" Content="{Binding .}">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding Path=SelectedIndex, ElementName=gameplayTabs}">
                                                <b:Interaction.Behaviors>
                                                    <b:ConditionBehavior>
                                                        <b:ConditionalExpression>
                                                            <b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=gameplayTabs}" Operator="NotEqual" RightOperand="-1"/>
                                                        </b:ConditionalExpression>
                                                    </b:ConditionBehavior>
                                                </b:Interaction.Behaviors>
                                                <!-- clear subtab panel -->
                                                <b:ChangePropertyAction TargetName="gameplaySubPanel" PropertyName="DataContext" Value="{x:Null}"/>
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </ContentControl>

                                    <Control x:Name="gameplayPanel"/>

                                </Grid>

                                <ContentPresenter x:Name="DetailsSection" Content="{Binding .}" VerticalAlignment="Bottom" Margin="-70,0,0,0"/>

                            </StackPanel>

                            <ListBox x:Name="gameplayTabs" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,176,0,0">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template" Value="{StaticResource gameplayTabTemplate}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBoxItem x:Name="originTab" Tag="origin" IsSelected="True">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_origin.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_origin_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="raceTab" Tag="race">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>
                                <ListBoxItem x:Name="subRaceTab" Tag="subrace" Visibility="{Binding Path=SelectableSubRaces.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="classTab" Tag="class">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>
                                <ListBoxItem x:Name="subClassTab" Tag="subclass" Visibility="{Binding Path=SelectableSubClasses.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="deityTab" Tag="deity" Visibility="{Binding Path=SelectableDeities.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="backgroundTab" Tag="background">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_origin.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_origin_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="abilityTab" Tag="ability">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_abilities.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_abilities_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                                <ListBoxItem x:Name="spellPrepTab" Tag="spellprep" Visibility="{Binding SpellPrepare.Preparable.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                    <ListBoxItem.Resources>
                                        <BitmapImage x:Key="tabIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
                                        <BitmapImage x:Key="tabIconHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class_h.png"/>
                                    </ListBoxItem.Resources>
                                </ListBoxItem>

                            </ListBox>

                        </Grid>

                        

                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding IsClassDetailsOpen}" Value="True">
                            <Setter TargetName="DetailsSection" Property="ContentTemplate" Value="{StaticResource DetailsTemplate}"/>
                        </DataTrigger>

                        <!--
                        Navigation Flow from blank state
                        -->
                        <DataTrigger Binding="{Binding SelectedOrigin}" Value="{x:Null}">
                            <Setter TargetName="raceTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="subRaceTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="classTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="subClassTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="abilityTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="gameplayTabs" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SelectedRace}" Value="{x:Null}">
                            <Setter TargetName="subRaceTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="classTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="subClassTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="abilityTab" Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SelectedClass}" Value="{x:Null}">
                            <Setter TargetName="backgroundTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="abilityTab" Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                <Condition Binding="{Binding SelectedSubClass}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="deityTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="backgroundTab" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="abilityTab" Property="IsEnabled" Value="False"/>
                        </MultiDataTrigger>

                        <!--
                        Gameplay Panel Content 
                        -->

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="origin">

                            <Setter TargetName="gameplayPanel" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_origin.png" Stretch="None" Margin="0,64,0,0"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h4e22c88bg6071g4c6dg81fdg68133ee0804d, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                            <!-- Custom -->
                                            <ListBox x:Name="customOrigins" ItemTemplate="{StaticResource OriginPortraitTemplate}" ItemContainerStyle="{DynamicResource CCIconTextListBoxItemStyle}" ItemsSource="{Binding FilteredItems, ElementName=CustomOriginsCollection}" SelectedItem="{Binding SelectedOrigin}" HorizontalAlignment="Center" Margin="0,10,0,0">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel HorizontalAlignment="Center"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="SelectionChanged">
                                                        <b:ChangePropertyAction TargetName="presetOrigins" PropertyName="SelectedItem" Value="{x:Null}" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ListBox>

                                            <StackPanel x:Name="customSelectionDetails">

                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,50,0,0">

                                                    <ls:LSButton Template="{StaticResource FramedIconWithTextButtonTemplate}" Content="{Binding Source=h6b184ec1gc364g4467g9617g3ab1a3959d10, Converter={StaticResource TranslatedStringConverter}}" Tag="TextOnLeft" Command="{Binding RandomCharacter}" CommandParameter="new" IsEnabled="{Binding HasNewRandomCharacter}">
                                                        <ls:LSButton.ToolTip>
                                                            <ls:LSTooltip>
                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h039ed18bge1e8g4aaeg9c14g7d6c5a78d84a, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                            </ls:LSTooltip>
                                                        </ls:LSButton.ToolTip>
                                                        <ls:LSButton.Resources>
                                                            <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_d.png"/>
                                                            <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_h.png"/>
                                                            <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_p.png"/>
                                                            <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_disabled.png"/>
                                                            <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_randomize_d.png"/>
                                                            <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_randomize_h.png"/>
                                                            <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_randomize_d.png"/>
                                                            <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_randomize_d.png"/>
                                                        </ls:LSButton.Resources>
                                                    </ls:LSButton>

                                                    <ls:LSButton Template="{StaticResource FramedIconWithTextButtonTemplate}" Command="{Binding RandomCharacter}" CommandParameter="prev" IsEnabled="{Binding HasPreviousCharacter}">
                                                        <ls:LSButton.ToolTip>
                                                            <ls:LSTooltip>
                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hfbb465c0g5acbg4bf1g9fbagcaf67a9dc6c6, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                            </ls:LSTooltip>
                                                        </ls:LSButton.ToolTip>
                                                        <ls:LSButton.Resources>
                                                            <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_h.png"/>
                                                            <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                            <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_h.png"/>
                                                            <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                            <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                            <System:Single x:Key="XScale">-1</System:Single>
                                                            <System:Single x:Key="XCenter">14</System:Single>
                                                        </ls:LSButton.Resources>
                                                    </ls:LSButton>

                                                    <ls:LSButton Template="{StaticResource FramedIconWithTextButtonTemplate}" Command="{Binding RandomCharacter}" CommandParameter="next" IsEnabled="{Binding HasNextCharacter}" Margin="-10,0,0,0">
                                                        <ls:LSButton.ToolTip>
                                                            <ls:LSTooltip>
                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=heff4d9a7g56e6g4000g84c1g6f9ab6e49467, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                            </ls:LSTooltip>
                                                        </ls:LSButton.ToolTip>
                                                        <ls:LSButton.Resources>
                                                            <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_h.png"/>
                                                            <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                            <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                            <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_h.png"/>
                                                            <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                            <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_prevNext_d.png"/>
                                                        </ls:LSButton.Resources>
                                                    </ls:LSButton>

                                                </StackPanel>

                                            </StackPanel>

                                            <ContentControl Template="{StaticResource decoratedHeader}" Margin="0,50,0,0">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h9dad9822gc6c6g4145g8c9bg4d6c48cf2bfb, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ContentControl>

                                            <!-- Origins -->
                                            <ListBox x:Name="presetOrigins" ItemsPanel="{StaticResource gameplayItemsPanelTemplate}" ItemTemplate="{StaticResource OriginPortraitTemplate}" ItemsSource="{Binding FilteredItems, ElementName=PresetOriginsCollection}" SelectedItem="{Binding SelectedOrigin}" Margin="0,20,0,0">
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource CCIconTextListBoxItemStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsSelectable}" Value="False">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="SelectionChanged">
                                                        <b:ChangePropertyAction TargetName="customOrigins" PropertyName="SelectedItem" Value="{x:Null}" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ListBox>

                                            <StackPanel x:Name="presetSelectionDetails">
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedOrigin.Name}" FontSize="{StaticResource BigFontSize}" HorizontalAlignment="Center" Margin="0,50,0,0"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,20,0,0"/>

                                                <ls:LSButton Template="{StaticResource FramedIconWithTextButtonTemplate}" Content="{Binding Source=h0a5097d1g8471g4a05ga294gf9549ecf2151, Converter={StaticResource TranslatedStringConverter}}" Tag="TextOnLeft" Command="{Binding PlayOriginTimeline}" HorizontalAlignment="Center" Margin="0,50,0,0">
                                                    <ls:LSButton.ToolTip>
                                                        <ls:LSTooltip>
                                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h27748ec7g3daag48d2gb349g3918f5c929c4, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                        </ls:LSTooltip>
                                                    </ls:LSButton.ToolTip>
                                                    <ls:LSButton.Resources>
                                                        <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_d.png"/>
                                                        <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_h.png"/>
                                                        <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_p.png"/>
                                                        <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btnTiny_disabled.png"/>
                                                        <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                        <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_h.png"/>
                                                        <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                        <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_playRecording_d.png"/>
                                                    </ls:LSButton.Resources>
                                                </ls:LSButton>
                                            </StackPanel>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding SelectedOrigin}" Value="{x:Null}">
                                                <Setter TargetName="customSelectionDetails" Property="Visibility" Value="Collapsed"/>
                                                <Setter TargetName="presetSelectionDetails" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="True">
                                                <Setter TargetName="presetSelectionDetails" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="False">
                                                <Setter TargetName="customSelectionDetails" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">

                            <Setter TargetName="gameplayPanel" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>

                                        <StackPanel>
                                            <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h6020727bge0e3g4de7gaf3ag469c3b32b3d2, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                            <ls:LSScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}" VerticalScrollBarVisibility="Auto">

                                                <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                    <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}" ItemContainerStyle="{StaticResource CCIconTextListBoxItemStyle}" Style="{StaticResource gameplayIconGridStyle}">
                                                        <ListBox.Resources>
                                                            <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                                        </ListBox.Resources>
                                                    </ListBox>

                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedRace.Name}" Style="{StaticResource PanelHeaderText}" TextAlignment="Center" Margin="0,20,0,0"/>
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding InfoRaceDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,10,0,0"/>

                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceSpellSelectors}" ItemTemplate="{StaticResource SpellSelectorPreviewTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                    <ItemsControl x:Name="featureSpells" ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource ProgressionSpellsTemplate}"/>

                                                    <ContentControl Template="{DynamicResource ShowFeaturesTemplate}" DataContext="{Binding ProgressionData.RaceProgression.Other}" Content="{Binding Source='hd0d992ebg43f8g429bgbf11g0cbf54d84d4e', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Center" Margin="0,20,0,0"/>

                                                </StackPanel>
                                            </ls:LSScrollViewer>
                                        </StackPanel>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">

                            <Setter TargetName="gameplayPanel" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel x:Name="subracePanel">
                                            <Image Style="{StaticResource PanelHeaderIconStyle}"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h29d1d637g94bbg4f11g9bdfgbe0042b60e40, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>


                                            <ls:LSScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                                                <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                    <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}" ItemContainerStyle="{StaticResource CCIconTextListBoxItemStyle}" Style="{StaticResource gameplayIconGridStyle}">
                                                        <ListBox.Resources>
                                                            <Style x:Key="CustomIconStyle" BasedOn="{StaticResource RaceIconStyle}" TargetType="Rectangle"/>
                                                        </ListBox.Resources>
                                                    </ListBox>

                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedSubRace.Name}" Style="{StaticResource PanelHeaderText}" TextAlignment="Center" Margin="0,20,0,0"/>
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Race.Description}" Style="{StaticResource PanelDescriptionText}" Margin="0,10,0,20"/>

                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceSpellSelectors}" ItemTemplate="{StaticResource SpellSelectorPreviewTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

                                                    <ItemsControl x:Name="featureSpells" ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource ProgressionSpellsTemplate}"/>

                                                    <ContentControl Template="{DynamicResource ShowFeaturesTemplate}" DataContext="{Binding ProgressionData.SubRaceProgression.Other}" Content="{Binding Source='hb4961bdbg618bg4350g8bdbg89221f97b659', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Center" Margin="0,20,0,0"/>

                                                </StackPanel>

                                            </ls:LSScrollViewer>
                                        </StackPanel>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">

                            <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource classPanelTemplate}"/>

                        </DataTrigger>


                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">

                            <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource subClassPanelTemplate}"/>

                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="deity">
                            <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource deityTabPanelTemplate}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="background">

                            <Setter TargetName="gameplayPanel" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <Image Source="{StaticResource IconClass}" Stretch="None" Margin="0,64,0,0"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h1d2631e2g78fdg4de2gadceg1a724c2f7d9b, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                                            <ListBox ItemTemplate="{StaticResource CustomIconTemplate}" ItemsSource="{Binding SelectableBackgrounds}" SelectedItem="{Binding SelectedBackground}" ItemContainerStyle="{StaticResource CCIconTextListBoxItemStyle}" Style="{StaticResource gameplayIconGridStyle}">
                                                <ListBox.Resources>
                                                    <Style x:Key="CustomIconStyle" BasedOn="{StaticResource BackgroundIconStyle}" TargetType="Rectangle"/>
                                                </ListBox.Resources>
                                            </ListBox>

                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedBackground.Name}" Style="{StaticResource PanelHeaderText}" TextAlignment="Center" Margin="0,20,0,0"/>
                                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.BackgroundDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,10,0,0"/>

                                            <Control Template="{StaticResource progressionInfo}" DataContext="{Binding ProgressionData.BackgroundProgression}" HorizontalAlignment="Center" Margin="0,50,0,0"/>

                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="ability">
                            <Setter TargetName="gameplayPanel" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid>

                                            <StackPanel x:Name="basePanel">

                                                <Image Source="{StaticResource IconClass}" Stretch="None" Margin="0,64,0,0"/>
                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h711b5e8bgb67bg43f7gac08g36b2e2466acd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>


                                                <Grid Width="1012" Margin="0,32,0,0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    
                                                    <!-- Proficiency Bonus Section -->
                                                    <Image Grid.Row="0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/decorated_box.png" Stretch="None"/>
                                                    <StackPanel Grid.Row="0" x:Name="ProficiencyBonus"  DataContext="{Binding DummyCharacter.Stats.ProficiencyBonus}" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <StackPanel.ToolTip>
                                                            <ls:LSTooltip IsHitTestVisible="False" Content="{Binding Path=DataContext ,ElementName=ProficiencyBonus}" Placement="Right" HorizontalOffset="80" VerticalOffset="-120"/>
                                                        </StackPanel.ToolTip>
                                                        <Control Template="{StaticResource StatsDisplayName}" Foreground="{StaticResource CCTextPrimary}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                                        <TextBlock Text="{Binding Value, StringFormat='{}: {0 +#; -#; -}'}" Foreground="{StaticResource CCTextPrimary}"/>
                                                    </StackPanel>

                                                    <StackPanel Grid.Row="1" HorizontalAlignment="Center" Margin="0,20,0,0">
                                                        <TextBlock x:Name="AssignAbilityPointsTitle" ls:TextBlockFormatter.SourceText="{Binding Source='h711b5e8bgb67bg43f7gac08g36b2e2466acd', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource CCTextLightest}"/>
                                                        <TextBlock x:Name="AssignAbilityPointsValue" ls:TextBlockFormatter.SourceText="{Binding UnusedAbilityPoints}" HorizontalAlignment="Center"/>
                                                    </StackPanel>

                                                    <Grid Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>

                                                        <ItemsControl Grid.Column="0" ItemsSource="{Binding DummyCharacter.Stats.Abilities}" VerticalAlignment="Bottom" Margin="40,0,24,0">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate DataType="{x:Type ls:VMAbility}">
                                                                    <Grid x:Name="AbilityRoot">
                                                                        <Grid.Resources>
                                                                            <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                                            <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_h.png"/>
                                                                            <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                                            <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                                                                            <BitmapImage x:Key="IconProficiency" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_proficiency.png"/>
                                                                        </Grid.Resources>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="160"/>
                                                                            <ColumnDefinition/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <Image Grid.Column="0" HorizontalAlignment="Left">
                                                                            <Image.Style>
                                                                                <Style TargetType="Image">
                                                                                    <Setter Property="Stretch" Value="None"/>
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Strength">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_strength.png"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Constitution">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_constitution.png"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Dexterity">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_dexterity.png"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Intelligence">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_intelligence.png"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Wisdom">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_wisdom.png"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Ability}" Value="Charisma">
                                                                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_charisma.png"/>
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Image.Style>
                                                                        </Image>
                                                                        
                                                                        <Image Grid.Column="0" Source="{StaticResource IconProficiency}" Stretch="None" Visibility="{Binding IsPrimary, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='True'}" HorizontalAlignment="Right" Margin="0,0,16,0">
                                                                            <Image.ToolTip>
                                                                                <ls:LSTooltip IsHitTestVisible="False" ContentTemplate="{StaticResource PrimaryAbilityTooltipContentTemplate}" Style="{StaticResource ManagedTooltipStyle}" Placement="Right"/>
                                                                            </Image.ToolTip>
                                                                        </Image>

                                                                        <Control Grid.Column="1" x:Name="AbilityName" Template="{StaticResource AbilityDisplayName}" Foreground="{StaticResource LS_PrimaryColor}" FontSize="{StaticResource BigFontSize}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                                            <Control.ToolTip>
                                                                                <ls:LSTooltip Content="{Binding Path=DataContext, ElementName=AbilityRoot}" Placement="Right" HorizontalOffset="-40"/>
                                                                            </Control.ToolTip>
                                                                        </Control>

                                                                        <ls:LSButton Grid.Column="2" Template="{StaticResource FrameWithIconButtonTemplate}" IsEnabled="{Binding CanDecrease}" Command="{Binding DataContext.DecreaseAbility, ElementName=CharacterCreation}" CommandParameter="{Binding}" SoundID="UI_HUD_CC_DecreaseAbility">
                                                                            <ls:LSButton.Resources>
                                                                                <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_min_d.png"/>
                                                                                <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_min_h.png"/>
                                                                                <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_min_d.png"/>
                                                                                <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_min_d.png"/>
                                                                            </ls:LSButton.Resources>
                                                                        </ls:LSButton>

                                                                        <TextBlock Grid.Column="3" x:Name="value" ls:TextBlockFormatter.SourceText="{Binding Value}" Foreground="{StaticResource CCTextLight}" FontSize="{DynamicResource BigFontSize}" TextAlignment="Right" VerticalAlignment="Center" Width="52" Margin="8,0,16,0"/>

                                                                        <ls:LSButton Grid.Column="4" Template="{StaticResource FrameWithIconButtonTemplate}" IsEnabled="{Binding CanIncrease}" Command="{Binding DataContext.IncreaseAbility, ElementName=CharacterCreation}" CommandParameter="{Binding}" SoundID="UI_HUD_CC_IncreaseAbility">
                                                                            <ls:LSButton.Resources>
                                                                                <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_plus_d.png"/>
                                                                                <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_plus_h.png"/>
                                                                                <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_plus_d.png"/>
                                                                                <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_plus_d.png"/>
                                                                            </ls:LSButton.Resources>
                                                                        </ls:LSButton>
                                                                    </Grid>

                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding RaceBonus}" Value="0">
                                                                            <Setter TargetName="value" Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>

                                                        <StackPanel Grid.Column="1" x:Name="abilityBonusSelector" Visibility="{Binding Path=RaceProgressionDetails.AbilityBonusSelection.Count, Converter={StaticResource CountToVisibilityConverter}}" 
                                                                    VerticalAlignment="Bottom" Margin="0,-48,0,-32">
                                                            <TextBlock x:Name="AbilityBonusSectionTitle"  ls:TextBlockFormatter.SourceText="{Binding Source=hc0433be0g73a8g4a72ga936ga1ee21e4a5de, Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource CCTextLightest}" 
                                                                       TextWrapping="Wrap" Width="200" HorizontalAlignment="Center" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" FontSize="{StaticResource ScaledDefaultFontSize}" 
                                                                       LineHeight="{StaticResource ScaledDefaultFontSizeLineHeight}" Margin="0,0,0,8"/>
                                                            <ItemsControl VerticalAlignment="Bottom" ItemsSource="{Binding RaceProgressionDetails.AbilityBonusSelection}" AlternationCount="{Binding ItemsSource.Count, RelativeSource={RelativeSource Self}}">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Grid>
                                                                            <Grid.Resources>
                                                                                <BitmapImage x:Key="AttributeExtraBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/attributeExtra_bg.png"/>
                                                                                <BitmapImage x:Key="CheckHolderInactive_d" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/checkHolder_inactive_d.png"/>
                                                                                <BitmapImage x:Key="CheckMarkSkillsSelected" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/checkMark_skills_selected.png"/>
                                                                            </Grid.Resources>
                                                                            <Image Source="{StaticResource AttributeExtraBackground}" Stretch="None"/>

                                                                            <StackPanel x:Name="BonusColumn" Width="100">

                                                                                <TextBlock x:Name="AbilityBonusTitle" Text="{Binding AbilityBonus, StringFormat={}{0:+#;-#;0}}" HorizontalAlignment="Center"/>

                                                                                <ItemsControl ItemsSource="{Binding BonusAbilities}">
                                                                                    <ItemsControl.ItemTemplate>
                                                                                        <DataTemplate>

                                                                                            <ls:LSButton x:Name="button" Command="{Binding DataContext.SelectAbilityBonus, ElementName=CharacterCreation}" Height="104" OverwriteClickSound="UI_Shared_Checkbox">
                                                                                                <ls:LSButton.CommandParameter>
                                                                                                    <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                                                                                        <Binding Path="DataContext" ElementName="BonusColumn"/>
                                                                                                        <Binding Path="."/>
                                                                                                    </MultiBinding>
                                                                                                </ls:LSButton.CommandParameter>
                                                                                                <ls:LSButton.Template>
                                                                                                    <ControlTemplate>
                                                                                                        <Grid x:Name="check">
                                                                                                            <Image x:Name="holder" Source="{StaticResource CheckHolderInactive_d}" Stretch="None"/>
                                                                                                            <Image x:Name="mark" Source="{StaticResource CheckMarkSkillsSelected}" Stretch="None"/>
                                                                                                        </Grid>
                                                                                                        <ControlTemplate.Triggers>

                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter TargetName="holder" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/checkHolder_inactive_h.png"/>
                                                                                                            </Trigger>

                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter TargetName="check" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                                                                                                            </Trigger>

                                                                                                            <DataTrigger Binding="{Binding Improvement}" Value="0">
                                                                                                                <Setter TargetName="mark" Property="Visibility" Value="Collapsed"/>
                                                                                                            </DataTrigger>

                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </ls:LSButton.Template>
                                                                                            </ls:LSButton>

                                                                                            <DataTemplate.Triggers>
                                                                                                <DataTrigger Binding="{Binding CanDecrease}" Value="True">
                                                                                                    <Setter TargetName="button" Property="Command" Value="{Binding DataContext.DeselectAbilityBonus, ElementName=CharacterCreation}"/>
                                                                                                </DataTrigger>
                                                                                            </DataTemplate.Triggers>
                                                                                        </DataTemplate>
                                                                                    </ItemsControl.ItemTemplate>
                                                                                </ItemsControl>

                                                                            </StackPanel>
                                                                        </Grid>

                                                                        <DataTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Self}}" Value="0"/>
                                                                                    <Condition Binding="{Binding DataContext.Validity.RacialSelectors.AbilityBonusSelectorFirst, ElementName=CharacterCreation}" Value="True"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter TargetName="AbilityBonusTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Self}}" Value="0"/>
                                                                                    <Condition Binding="{Binding DataContext.Validity.ClassSelectors.AbilityBonusSelectorFirst, ElementName=CharacterCreation}" Value="True"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter TargetName="AbilityBonusTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                                            </MultiDataTrigger>

                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Self}}" Value="1"/>
                                                                                    <Condition Binding="{Binding DataContext.Validity.RacialSelectors.AbilityBonusSelectorSecond, ElementName=CharacterCreation}" Value="True"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter TargetName="AbilityBonusTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Self}}" Value="1"/>
                                                                                    <Condition Binding="{Binding DataContext.Validity.ClassSelectors.AbilityBonusSelectorSecond, ElementName=CharacterCreation}" Value="True"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter TargetName="AbilityBonusTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                                            </MultiDataTrigger>
                                                                        </DataTemplate.Triggers>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </StackPanel>

                                                    </Grid>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                                                    <StackPanel.Resources>
                                                        <Style TargetType="ls:LSButton" BasedOn="{StaticResource CCButtonStyle}"/>
                                                    </StackPanel.Resources>

                                                    <ls:LSButton Content="{Binding Source='h0bb0adf7g2b3ag4094gba80gf78d6a5337df', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding ResetAbilities}" IsEnabled="{Binding CanResetAbilities}"/>

                                                    <ls:LSButton Content="{Binding Source='h44d84d6fg14d8g4606gb563gf458f155defa', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding UseRecommendedAbilities}" IsEnabled="{Binding CanUseRecommendedAbilities}" SoundID="UI_HUD_CC_Recommended">
                                                        <ls:LSButton.ToolTip>
                                                            <ls:LSTooltip>
                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h2e37cc3dgf343g4a2dg91f7gc1e9c3e29bde, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                                            </ls:LSTooltip>
                                                        </ls:LSButton.ToolTip>
                                                    </ls:LSButton>
                                                </StackPanel>

                                                <ls:LSNineSliceImage Slices="244,50" ImageSource="{StaticResource DetailsBoxBig}" HorizontalAlignment="Center" IconWidth="100" MinWidth="700" MinHeight="252" Margin="0,50,0,0">
                                                    <Grid HorizontalAlignment="Center">
                                                        <TextBlock x:Name="SkillProficienciesTitle" ls:TextBlockFormatter.SourceText="{Binding Source=h14f4a0e4gb495g4a75gb318g6d5d322fd738, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Top" Margin="252,0" MaxWidth="560" TextTrimming="CharacterEllipsis"/>

                                                        <Control Template="{StaticResource skillsEditorSummaryTemplate}" HorizontalAlignment="Center" MaxWidth="640" Margin="0,80,0,60"/>

                                                        <ls:LSToggleButton x:Name="editSkillsButton" Template="{StaticResource EditSkillsButtonTemplate}" IsChecked="False" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,-8" SoundID="UI_HUD_CC_OpenCloseToggle"/>

                                                    </Grid>
                                                </ls:LSNineSliceImage>

                                            </StackPanel>

                                            <Grid x:Name="skillsOverPanel" Visibility="{Binding Path=IsChecked, ElementName=editSkillsButton, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Top" Margin="0,220,0,0">

                                                <Control Template="{StaticResource overpanelSkillsTemplate}"/>

                                                <ls:LSToggleButton IsChecked="{Binding IsChecked, Mode=TwoWay, ElementName=editSkillsButton}" Template="{StaticResource ToggleConfirmButtonTemplate}" VerticalAlignment="Bottom" Margin="0,0,0,-16" SoundID="UI_HUD_CC_OpenCloseToggle"/>
                                            </Grid>

                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsChecked, ElementName=editSkillsButton}" Value="True">
                                                <Setter TargetName="basePanel" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                                                <Setter TargetName="basePanel" Property="IsEnabled" Value="False"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding UnusedAbilityPoints, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                <Setter TargetName="AssignAbilityPointsTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                                <Setter TargetName="AssignAbilityPointsValue" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Validity.RacialSelectors.AbilityBonusSelectors}" Value="False">
                                                <Setter TargetName="AbilityBonusSectionTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Validity.ClassSelectors.AbilityBonusSelectors}" Value="False">
                                                <Setter TargetName="AbilityBonusSectionTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">

                            <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource spellPrepTemplate}"/>

                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Control.Template>

        </Control>

        <Control x:Name="Summary">
            <Control.Template>
                <ControlTemplate TargetType="Control">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="TransitionToOff">
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="summaryControls">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="TransitionToOn">
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="Opacity" To="1" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                            <DoubleAnimation Storyboard.TargetName="GameplayAppearanceButtons" Storyboard.TargetProperty="Opacity" To="1" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="summaryControls">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames> 
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="GameplayAppearanceButtons">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="TransitionToCenter">
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="-200" Duration="0:0:0.6" DecelerationRatio="0.5"/>
                            <DoubleAnimation Storyboard.TargetName="summaryControls" Storyboard.TargetProperty="Opacity" To="1" BeginTime="0:0:0.4" Duration="0:0:0.1"/>
                            <DoubleAnimation Storyboard.TargetName="GameplayAppearanceButtons" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="summaryControls">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="GameplayAppearanceButtons">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <Grid>
                        <b:Interaction.Triggers>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Gameplay">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOn}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger> 

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Appearance">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Naming">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToCenter}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Companion">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToOff}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Finished">
                                <b:ControlStoryboardAction Storyboard="{StaticResource TransitionToCenter}" ControlStoryboardOption="Play"/>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>

                        <DockPanel x:Name="summaryControls" HorizontalAlignment="Right" Margin="0,100,4,64">
                            <DockPanel.RenderTransform>
                                <TranslateTransform/>
                            </DockPanel.RenderTransform>

                            <Control DockPanel.Dock="Top" Template="{StaticResource summaryPanelTemplate}"/>

                            <!-- Appearance Buttons on Gameplay Page -->
                            <Control x:Name="GameplayAppearanceButtons" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Template="{StaticResource AppearanceButtonsTemplate}" Tag="gameplayPage">
                                <Control.RenderTransform>
                                    <TranslateTransform/>
                                </Control.RenderTransform>
                            </Control>

                        </DockPanel>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SelectedOrigin}" Value="{x:Null}">
                            <Setter TargetName="summaryControls" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedRace}" Value="{x:Null}">
                            <Setter TargetName="summaryControls" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Control.Template>
        </Control>

        <Control x:Name="appearancePage" Template="{StaticResource appearancePageTemplate}" Tag="appearancePage"  Visibility="Visible">
            <Control.RenderTransform>
                <!-- initially placed to the right of the gameplay page
                -->
                <TranslateTransform/>
                <!-- While CC orangebox is WIP this is used to start on the Appearance page when using reloadUIs
                <TranslateTransform/>
                -->
            </Control.RenderTransform>
        </Control>

       <!-- Naming Page -->
        <Control x:Name="namingPage">
            <Control.Template>
                <ControlTemplate>
                    <Grid>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Naming">
                                <b:ChangePropertyAction TargetName="NamingContent" PropertyName="Visibility" Value="Visible"/>
                                <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-5.0</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-1.2</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-0.5</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding ElementName=flowPage, Path=SelectedItem.Content}" Value="Naming" Comparison="NotEqual">
                                <b:ChangePropertyAction TargetName="NamingContent" PropertyName="Visibility" Value="Collapsed"/>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>

                        <StackPanel x:Name="NamingContent" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,280">

                            <StackPanel x:Name="customCharacterNameInput" Visibility="Collapsed">
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hfc928d2ega3a9g420egbeb5g0b20ab704959, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" Effect="{StaticResource HUD.DropShadow}" FontWeight="DemiBold" Margin="0,0,0,-24"/>
                                <Grid x:Name="textInputBox" HorizontalAlignment="Center">

                                    <ls:LSNineSliceImage x:Name="textInputBg" Padding="20,0,20,0" Slices="150,86,150,86" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_namegroupBG_01.png" MinWidth="740" MinHeight="196">

                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Image x:Name="textInputDashes" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_namegroup_input_d.png" Stretch="Fill" Height="68" MinWidth="584" Width="{Binding ElementName=characterName, Path=ActualWidth}"/>

                                            <ls:LSTextBox x:Name="characterName" Text="{Binding CharacterName}" IsEnabled="{Binding CanEditName}" MaxLength="20" TextImmediateSourceUpdate="True" Foreground="{StaticResource CCTextPrimary}" FontSize="{StaticResource MassiveFontSize}" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" Margin="60,0,60,0"/>

                                        </Grid>

                                    </ls:LSNineSliceImage>

                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="originName" Visibility="Collapsed">
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hfaa5d318g5f40g47eegac3bga7134a42232f, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" Margin="0,100,0,0"/>
                                <Grid HorizontalAlignment="Center">

                                    <ls:LSNineSliceImage Padding="20,0,20,0" Slices="150,86,150,86" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_namegroupBG_01.png" MinWidth="740" MinHeight="196">

                                        <TextBlock Text="{Binding SelectedOrigin.Name}" FontSize="{StaticResource MassiveFontSize}" TextAlignment="Center" VerticalAlignment="Center"/>

                                    </ls:LSNineSliceImage>
                                </Grid>
                            </StackPanel>

                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding CanEditName}" Value="True">
                            <Setter TargetName="customCharacterNameInput" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CanEditName}" Value="False">
                            <Setter TargetName="originName" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=textInputBox, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="textInputDashes" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_namegroup_input_h.png"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Validity.Name}" Value="False">
                            <Setter TargetName="textInputDashes" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_namegroup_input_error_d.png"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Control.Template>
        </Control>

        <Control x:Name="readyInfoPage" Visibility="Collapsed">
            <Control.Template>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <BitmapImage x:Key="MessageBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/MainMenu/splashMsg_d.png"/>
                        <BitmapImage x:Key="TopBackgroundFade" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/fade_header.png"/>
                    </ControlTemplate.Resources>
                    <Grid>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding ElementName=readyInfoPage, Path=Visibility}" Value="Visible">
                                <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
                                <b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-6.0</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-2.2</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                            <Binding>
                                                <Binding.Source>
                                                    <System:Single>-2.2</System:Single>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>

                        <Image Source="{StaticResource TopBackgroundFade}" Stretch="Fill" Width="1800" Height="180" VerticalAlignment="Top"/>
                        <TextBlock Style="{StaticResource PanelHeaderText}" Effect="{StaticResource HUD.DropShadow}"
                                   ls:TextBlockFormatter.SourceText="{Binding Source=hd0893eb3gec78g4c1ag8c10gf4860d887ff9, Converter={StaticResource TranslatedStringConverter}}" 
                                   VerticalAlignment="Top" Margin="0,64,0,0"/>

                        <Image Source="{StaticResource MessageBackground}" Stretch="None" VerticalAlignment="Bottom" Margin="0,0,0,240"/>
                        <TextBlock x:Name="waitingMessage" Style="{StaticResource PanelHeaderText}" Foreground="{StaticResource CCTextLightest}" Effect="{StaticResource HUD.DropShadow}"
                                   ls:TextBlockFormatter.SourceText="{Binding Source=he3eaec5bg75f0g4856g9b67g8cabfb128f56, Converter={StaticResource TranslatedStringConverter}}" 
                                   VerticalAlignment="Bottom" Margin="0,0,0,316"/>

                    </Grid>
                </ControlTemplate>
            </Control.Template>
        </Control>

        <Control x:Name="centralBottomControls" Template="{StaticResource centralBottomControlsTemplate}" VerticalAlignment="Bottom"/>

        <ls:LSButton Template="{StaticResource FrameWithIconButtonTemplate}" Command="{Binding ExitCharacterCreation}" SoundID="UI_HUD_CC_Accept" ToolTipService.Placement="Bottom" ToolTipService.VerticalOffset="-20"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,20,0">
            <ls:LSButton.Resources>
                <BitmapImage x:Key="FrameNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                <BitmapImage x:Key="FrameHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_h.png"/>
                <BitmapImage x:Key="FramePressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                <BitmapImage x:Key="FrameDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/btn_roundBig_d.png"/>
                <BitmapImage x:Key="IconNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_close_big_d.png"/>
                <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_close_big_h.png"/>
                <BitmapImage x:Key="IconPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_close_big_d.png"/>
                <BitmapImage x:Key="IconDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_close_big_d.png"/>
            </ls:LSButton.Resources>
            <ls:LSButton.ToolTip>
                <ls:LSTooltip>
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hb8f17a12gded0g4ed7g8897gfa821f15093c, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                </ls:LSTooltip>
            </ls:LSButton.ToolTip>
        </ls:LSButton>

        <Control x:Name="multiplayer" Template="{StaticResource MultiplayerPanelTemplate}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,20"/>

    </Grid>

</ls:UIWidget>